<?xml version="1.0" encoding="UTF-8"?>
<process
    name="GetAccountHistory"
    targetNamespace="http://xml.smilecoms.com/SCA"
    xmlns:tns="http://xml.smilecoms.com/SCA"
    xmlns:sxxf="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/XPathFunctions"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:BM="http://xml.smilecoms.com/BM"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:BPELUtils="java://com.smilecoms.commons.bpel.BPELUtils"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor2"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" xmlns:ns0="http://xml.smilecoms.com/schema/SCA" xmlns:ns1="http://xml.smilecoms.com/schema/BM" xmlns:ns2="http://docs.oasis-open.org/wsbpel/2.0/process/executable">
    <import namespace="http://xml.smilecoms.com/SCA" location="../../wsdl/SCAServiceDefinition.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://xml.smilecoms.com/BM" location="../Partners/BM/BMServiceDefinition.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    
    <partnerLinks>
        <partnerLink name="BM" xmlns:tns="http://xml.smilecoms.com/BM" partnerLinkType="tns:BMServiceDefinition" partnerRole="BM"/>
        <partnerLink name="SCA" partnerLinkType="tns:SCA" myRole="SCAImplementation"/>
    </partnerLinks>
    <variables>
        <variable name="TmpString" type="xsd:string"/>
        <variable name="Fault1FaultVar" messageType="tns:SCAError"/>
        <variable name="BMGetAccountHistoryOut" xmlns:tns="http://xml.smilecoms.com/BM" messageType="tns:GetAccountHistoryResponse"/>
        <variable name="BMGetAccountHistoryIn" xmlns:tns="http://xml.smilecoms.com/BM" messageType="tns:GetAccountHistoryRequest"/>
        <variable name="SCAGetAccountHistoryOut" messageType="tns:AccountHistoryResponse"/>
        <variable name="SCAGetAccountHistoryIn" messageType="tns:GetAccountHistoryRequest"/>
    </variables>
    <faultHandlers>
        <catch  faultMessageType="BM:BMError" faultVariable="BMError">
            <sequence name="Sequence1">
                <assign name="Assign2">
                    <copy>
                        <from>$BMError.BMError/ns1:ErrorDesc</from>
                        <to>$Fault1FaultVar.SCAError/ns0:ErrorDesc</to>
                    </copy>
                    <copy>
                        <from>$BMError.BMError/ns1:ErrorType</from>
                        <to>$Fault1FaultVar.SCAError/ns0:ErrorType</to>
                    </copy>
                    <copy>
                        <from>$BMError.BMError/ns1:ErrorCode</from>
                        <to>$Fault1FaultVar.SCAError/ns0:ErrorCode</to>
                    </copy>
                </assign>
                <reply name="Reply2" partnerLink="SCA" operation="GetAccountHistory" portType="tns:SCASoap" faultName="tns:fault1" variable="Fault1FaultVar"/>
            </sequence>
        </catch>
    </faultHandlers>
    <sequence>
        <receive name="Receive1" createInstance="yes" partnerLink="SCA" operation="GetAccountHistory" portType="tns:SCASoap" variable="SCAGetAccountHistoryIn"/>
        <scope name="Dynamic_EPR" xmlns:LT="java://com.smilecoms.lt.LT" >
            <variables>
                <variable name="EndPoint" type="xsd:string"/>
            </variables>
            <sequence name="Dynamic_EPR">
                <assign name="AssignPLs">
                    <copy>
                        <from>LT:getEndPoint('BM')</from>
                        <to>$EndPoint</to>
                    </copy>
                    <copy>
                        <from>sxxf:doUnMarshal($EndPoint)</from>
                        <to partnerLink="BM"/>
                    </copy>
                </assign>
            </sequence>
        </scope>
        <assign name="Assign1">
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:SCAContext/ns0:TxId</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:PlatformContext/ns1:TxId</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:SCAContext/ns0:OriginatingIdentity</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:PlatformContext/ns1:OriginatingIdentity</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:SCAContext/ns0:OriginatingIP</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:PlatformContext/ns1:OriginatingIP</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:SCAContext/ns0:Tenant</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:PlatformContext/ns1:Tenant</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:TransactionRecordId</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:TransactionRecordId</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:Source</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:Source</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:DateFrom</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:DateFrom</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:DateTo</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:DateTo</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:ExtTxId</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:ExtTxId</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:TransactionType</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:TransactionType</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:ResultLimit</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:ResultLimit</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:Offset</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:Offset</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:AccountId</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:AccountId</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:Verbosity</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:Verbosity</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:ServiceInstanceIds</from>
                <to>$BMGetAccountHistoryIn.AccountHistoryQuery/ns1:ServiceInstanceIds</to>
            </copy>
        </assign>
        <invoke name="Call_BM" partnerLink="BM" operation="GetAccountHistory" xmlns:tns="http://xml.smilecoms.com/BM" portType="tns:BMSoap" inputVariable="BMGetAccountHistoryIn" outputVariable="BMGetAccountHistoryOut"/>
        <assign name="AssignCnt">
            <copy>
                <from>$BMGetAccountHistoryOut.AccountHistory/ns1:ResultsReturned</from>
                <to>$SCAGetAccountHistoryOut.AccountHistory/ns0:ResultsReturned</to>
            </copy>
        </assign>
        <if name="IfFoundRecord">
            <condition>$BMGetAccountHistoryOut.AccountHistory/ns1:ResultsReturned &gt; 0</condition>
            <assign name="CheckPermissions1">
                <copy>
                    <from>BPELUtils:checkPermissions($SCAGetAccountHistoryIn.AccountHistoryQuery/ns0:SCAContext, 'Account', $BMGetAccountHistoryOut.AccountHistory/ns1:TransactionRecords[1]/ns1:AccountId)</from>
                    <to>$SCAGetAccountHistoryOut.AccountHistory/ns0:SCAContext/ns0:Obviscated</to>
                </copy>
            </assign>
        </if>
        
        <assign name="BMToSCA">
            <copy>
                <from>BPELUtils:changeNamespace(sxxf:doMarshal($BMGetAccountHistoryOut.AccountHistory), 'http://xml.smilecoms.com/schema/BM', 'http://xml.smilecoms.com/schema/SCA')</from>
                <to>$TmpString</to>
            </copy>
            <copy>
                <from>sxxf:doUnMarshal($TmpString)</from>
                <to variable="SCAGetAccountHistoryOut" part="AccountHistory"/>
            </copy>
        </assign>
        
        <reply name="Reply1" partnerLink="SCA" operation="GetAccountHistory" portType="tns:SCASoap" variable="SCAGetAccountHistoryOut"/>
    </sequence>
</process>
