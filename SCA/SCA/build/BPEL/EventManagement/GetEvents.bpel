<?xml version="1.0"?>
<process
    name="GetEvents"
    targetNamespace="http://xml.smilecoms.com/SCA"
    xmlns:tns="http://xml.smilecoms.com/SCA"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:sxxf="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/XPathFunctions"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor2"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" 
    xmlns:ns0="http://xml.smilecoms.com/schema/ET" xmlns:ns1="http://xml.smilecoms.com/schema/SCA">
    <import namespace="http://xml.smilecoms.com/SCA" location="../../wsdl/SCAServiceDefinition.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://xml.smilecoms.com/ET" location="../Partners/ET/ETServiceDefinition.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <partnerLinks>
        <partnerLink name="ET" xmlns:tns="http://xml.smilecoms.com/ET" partnerLinkType="tns:ETServiceDefinition" partnerRole="ET"/>
        <partnerLink name="SCA" partnerLinkType="tns:SCA" myRole="SCAImplementation"/>
    </partnerLinks>
    <variables>
        <variable name="Fault1FaultVar" messageType="tns:SCAError"/>
        <variable name="ETGetEventsOut" xmlns:tns="http://xml.smilecoms.com/ET" messageType="tns:GetEventsResponse"/>
        <variable name="ETGetEventsIn" xmlns:tns="http://xml.smilecoms.com/ET" messageType="tns:GetEventsRequest"/>
        <variable name="SCAGetEventsOut" messageType="tns:GetEventsResponse"/>
        <variable name="SCAGetEventsIn" messageType="tns:GetEventsRequest"/>
    </variables>
    <faultHandlers>
        <catch faultVariable="ETError" xmlns:ET="http://xml.smilecoms.com/ET" faultMessageType="ET:ETError">
            <sequence name="Sequence1">
                <assign name="Assign1">
                    <copy>
                        <from>$ETError.ETError/ns0:ErrorDesc</from>
                        <to>$Fault1FaultVar.SCAError/ns1:ErrorDesc</to>
                    </copy>
                    <copy>
                        <from>$ETError.ETError/ns0:ErrorType</from>
                        <to>$Fault1FaultVar.SCAError/ns1:ErrorType</to>
                    </copy>
                    <copy>
                        <from>$ETError.ETError/ns0:ErrorCode</from>
                        <to>$Fault1FaultVar.SCAError/ns1:ErrorCode</to>
                    </copy>
                </assign>
                <reply name="Reply2" partnerLink="SCA" operation="GetEvents" portType="tns:SCASoap" faultName="tns:fault1" variable="Fault1FaultVar"/>
            </sequence>
        </catch>
    </faultHandlers>
    <sequence>
        <receive name="Receive1" createInstance="yes" partnerLink="SCA" operation="GetEvents" portType="tns:SCASoap" variable="SCAGetEventsIn"/>
        <scope name="Dynamic_EPR" xmlns:LT="java://com.smilecoms.lt.LT" >
            <variables>
                <variable name="EndPoint" type="xsd:string"/>
            </variables>
            <sequence name="Dynamic_EPR">
                <assign name="AssignPLs1">
                    <copy>
                        <from>LT:getEndPoint('ET')</from>
                        <to>$EndPoint</to>
                    </copy>
                    <copy>
                        <from>sxxf:doUnMarshal($EndPoint)</from>
                        <to partnerLink="ET"/>
                    </copy>
                </assign>
            </sequence>
        </scope>
        <assign name="AssignET">
            <copy>
                <from>$SCAGetEventsIn.EventQuery/ns1:SCAContext/ns1:TxId</from>
                <to>$ETGetEventsIn.EventQuery/ns0:PlatformContext/ns0:TxId</to>
            </copy>
            <copy>
                <from>$SCAGetEventsIn.EventQuery/ns1:SCAContext/ns1:OriginatingIdentity</from>
                <to>$ETGetEventsIn.EventQuery/ns0:PlatformContext/ns0:OriginatingIdentity</to>
            </copy>
            <copy>
                <from>$SCAGetEventsIn.EventQuery/ns1:SCAContext/ns1:OriginatingIP</from>
                <to>$ETGetEventsIn.EventQuery/ns0:PlatformContext/ns0:OriginatingIP</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetEventsIn.EventQuery/ns1:SCAContext/ns1:Tenant</from>
                <to>$ETGetEventsIn.EventQuery/ns0:PlatformContext/ns0:Tenant</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetEventsIn.EventQuery/ns1:EventType</from>
                <to>$ETGetEventsIn.EventQuery/ns0:EventType</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetEventsIn.EventQuery/ns1:EventSubType</from>
                <to>$ETGetEventsIn.EventQuery/ns0:EventSubType</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetEventsIn.EventQuery/ns1:EventKey</from>
                <to>$ETGetEventsIn.EventQuery/ns0:EventKey</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetEventsIn.EventQuery/ns1:DateFrom</from>
                <to>$ETGetEventsIn.EventQuery/ns0:DateFrom</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SCAGetEventsIn.EventQuery/ns1:DateTo</from>
                <to>$ETGetEventsIn.EventQuery/ns0:DateTo</to>
            </copy>
            <copy>
                <from>$SCAGetEventsIn.EventQuery/ns1:ResultLimit</from>
                <to>$ETGetEventsIn.EventQuery/ns0:ResultLimit</to>
            </copy>
        </assign>
        <invoke name="GetEvents" partnerLink="ET" operation="GetEvents" xmlns:tns="http://xml.smilecoms.com/ET" portType="tns:ETSoap" inputVariable="ETGetEventsIn" outputVariable="ETGetEventsOut"/>
        <forEach name="ForEachEvent" parallel="no" counterName="event">
            <startCounterValue>1</startCounterValue>
            <finalCounterValue>$ETGetEventsOut.EventList/ns0:NumberOfEvents</finalCounterValue>
            <scope name="Scope1">
                <assign name="AssignEvent">
                    <copy>
                        <from>$ETGetEventsOut.EventList/ns0:Events[$event]/ns0:EventType</from>
                        <to>$SCAGetEventsOut.EventList/ns1:Events[$event]/ns1:EventType</to>
                    </copy>
                    <copy>
                        <from>$ETGetEventsOut.EventList/ns0:Events[$event]/ns0:EventSubType</from>
                        <to>$SCAGetEventsOut.EventList/ns1:Events[$event]/ns1:EventSubType</to>
                    </copy>
                    <copy>
                        <from>$ETGetEventsOut.EventList/ns0:Events[$event]/ns0:EventKey</from>
                        <to>$SCAGetEventsOut.EventList/ns1:Events[$event]/ns1:EventKey</to>
                    </copy>
                    <copy>
                        <from>$ETGetEventsOut.EventList/ns0:Events[$event]/ns0:EventData</from>
                        <to>$SCAGetEventsOut.EventList/ns1:Events[$event]/ns1:EventData</to>
                    </copy>
                    <copy ignoreMissingFromData="yes">
                        <from>$ETGetEventsOut.EventList/ns0:Events[$event]/ns0:UniqueKey</from>
                        <to>$SCAGetEventsOut.EventList/ns1:Events[$event]/ns1:UniqueKey</to>
                    </copy>
                    <copy>
                        <from>$ETGetEventsOut.EventList/ns0:Events[$event]/ns0:Date</from>
                        <to>$SCAGetEventsOut.EventList/ns1:Events[$event]/ns1:Date</to>
                    </copy>
                    <copy>
                        <from>$ETGetEventsOut.EventList/ns0:Events[$event]/ns0:EventId
                        </from>
                        <to>$SCAGetEventsOut.EventList/ns1:Events[$event]/ns1:EventId
                        </to>
                    </copy>
                </assign>
            </scope>
        </forEach>
        <assign name="AssignCount">
            <copy>
                <from>$ETGetEventsOut.EventList/ns0:NumberOfEvents</from>
                <to>$SCAGetEventsOut.EventList/ns1:NumberOfEvents</to>
            </copy>
        </assign>
        <reply name="Reply1" partnerLink="SCA" operation="GetEvents" portType="tns:SCASoap" variable="SCAGetEventsOut"/>
    </sequence>
</process>
