<?xml version="1.0" encoding="UTF-8"?>
<process
    name="GetWLANServiceAVPs"
    targetNamespace="http://xml.smilecoms.com/SCASubFlows"
    xmlns:tns="http://xml.smilecoms.com/SCASubFlows"
    xmlns:BPELUtils="java://com.smilecoms.commons.bpel.BPELUtils" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxxf="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/XPathFunctions"
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor2"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" xmlns:ns0="http://xml.smilecoms.com/schema/IM" xmlns:ns1="http://xml.smilecoms.com/schema/SCA">
    <import namespace="http://xml.smilecoms.com/SCASubFlows" location="../../wsdl/SCASubFlows.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://xml.smilecoms.com/SCA" location="../../wsdl/SCAServiceDefinition.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://xml.smilecoms.com/IM" location="../Partners/IM/IMServiceDefinition.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    
    <partnerLinks>
        <partnerLink name="IM" xmlns:tns="http://xml.smilecoms.com/IM" partnerLinkType="tns:IMServiceDefinition" partnerRole="IM"/>
        
        <partnerLink name="SCASubFlows" partnerLinkType="tns:SCASubFlows" myRole="SCASubFlows"/>
    </partnerLinks>
    <variables>
        <variable name="IMGetNAIIdentityOut" xmlns:tns="http://xml.smilecoms.com/IM" messageType="tns:GetNAIIdentityResponse"/>
        <variable name="IMGetNAIIdentityIn" xmlns:tns="http://xml.smilecoms.com/IM" messageType="tns:GetNAIIdentityRequest"/>
        <variable name="Fault1FaultVar" messageType="tns:SubFlowError"/>
        <variable name="SubFlowGetWlanServiceAVPsOut" messageType="tns:ServiceAVPsResponse"/>
        <variable name="SubFlowGetWlanServiceAVPsIn" messageType="tns:GetWlanServiceAVPsRequest"/>
    </variables>
    <faultHandlers>
        <catch xmlns:IM="http://xml.smilecoms.com/IM" faultMessageType="IM:IMError" faultVariable="IMError">
            <sequence name="Sequence1">
                <assign name="Assign1">
                    <copy>
                        <from>$IMError.IMError/ns0:ErrorType</from>
                        <to>$Fault1FaultVar.SubFlowError/ErrorType</to>
                    </copy>
                    <copy>
                        <from>$IMError.IMError/ns0:ErrorDesc</from>
                        <to>$Fault1FaultVar.SubFlowError/ErrorDesc</to>
                    </copy>
                    <copy>
                        <from>$IMError.IMError/ns0:ErrorCode</from>
                        <to>$Fault1FaultVar.SubFlowError/ErrorCode</to>
                    </copy>
                </assign>
                <reply name="Reply2" partnerLink="SCASubFlows" operation="GetWlanServiceAVPs" portType="tns:SCASubFlowsSoap" faultName="tns:fault1" variable="Fault1FaultVar"/>
            </sequence>
        </catch>
    </faultHandlers>
    <sequence>
        <receive name="Receive1" createInstance="yes" partnerLink="SCASubFlows" operation="GetWlanServiceAVPs" portType="tns:SCASubFlowsSoap" variable="SubFlowGetWlanServiceAVPsIn"/>
        
        
        <scope name="Dynamic_EPR" xmlns:LT="java://com.smilecoms.lt.LT" >
            <variables>
                <variable name="EndPoint" type="xsd:string"/>
            </variables>
            <sequence name="Dynamic_EPR">
                <assign name="AssignPLs">
                    <copy>
                        <from>LT:getEndPoint('IM')</from>
                        <to>$EndPoint</to>
                    </copy>
                    <copy>
                        <from>sxxf:doUnMarshal($EndPoint)</from>
                        <to partnerLink="IM"/>
                    </copy>
                </assign>
            </sequence>
        </scope>


        <!-- For now we will only return the AVPs as -->
        <assign name="AssignIM">
            <copy ignoreMissingFromData="yes">
                <from>$SubFlowGetWlanServiceAVPsIn.WlanServiceLookupInfo/SubFlowContext/TxId</from>
                <to>$IMGetNAIIdentityIn.NAIIdentityQuery/ns0:PlatformContext/ns0:TxId</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SubFlowGetWlanServiceAVPsIn.WlanServiceLookupInfo/SubFlowContext/OriginatingIdentity</from>
                <to>$IMGetNAIIdentityIn.NAIIdentityQuery/ns0:PlatformContext/ns0:OriginatingIdentity</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SubFlowGetWlanServiceAVPsIn.WlanServiceLookupInfo/SubFlowContext/OriginatingIP</from>
                <to>$IMGetNAIIdentityIn.NAIIdentityQuery/ns0:PlatformContext/ns0:OriginatingIP</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$SubFlowGetWlanServiceAVPsIn.WlanServiceLookupInfo/SubFlowContext/Tenant</from>
                <to>$IMGetNAIIdentityIn.NAIIdentityQuery/ns0:PlatformContext/ns0:Tenant</to>
            </copy>
            <copy>
                <from>substring-after($SubFlowGetWlanServiceAVPsIn.WlanServiceLookupInfo/RemoteResourceId, '-')</from>
                <to>$IMGetNAIIdentityIn.NAIIdentityQuery/ns0:OSSBSSReferenceId</to>
            </copy>
        </assign>
        <invoke name="GetNAI" partnerLink="IM" operation="GetNAIIdentity" xmlns:tns="http://xml.smilecoms.com/IM" portType="tns:IMSoap" inputVariable="IMGetNAIIdentityIn" outputVariable="IMGetNAIIdentityOut"/>
        <assign name="AssignAVPs">
            <sxt:trace>
                <sxt:log level="finest" location="onStart">
                    <from>concat('Get Wlan svc avp with remote resource id: ', substring-after($SubFlowGetWlanServiceAVPsIn.WlanServiceLookupInfo/RemoteResourceId, '-'))</from>
                </sxt:log>
            </sxt:trace>
            <copy>
                <from>'NAIUsername'</from>
                <to>$SubFlowGetWlanServiceAVPsOut.ServiceAVPList/ServiceAVPs[1]/ns1:Attribute</to>
            </copy>
            <copy>
                <from>$IMGetNAIIdentityOut.NAIIdentity/ns0:NAIUsername</from>
                <to>$SubFlowGetWlanServiceAVPsOut.ServiceAVPList/ServiceAVPs[1]/ns1:Value</to>
            </copy>
            <copy>
                <from>'NAIPassword'</from>
                <to>$SubFlowGetWlanServiceAVPsOut.ServiceAVPList/ServiceAVPs[2]/ns1:Attribute</to>
            </copy>
            <copy ignoreMissingFromData="yes">
                <from>$IMGetNAIIdentityOut.NAIIdentity/ns0:NAIPassword</from>
                <to>$SubFlowGetWlanServiceAVPsOut.ServiceAVPList/ServiceAVPs[2]/ns1:Value</to>
            </copy>
        </assign>
        <reply name="Reply1" partnerLink="SCASubFlows" operation="GetWlanServiceAVPs" portType="tns:SCASubFlowsSoap" variable="SubFlowGetWlanServiceAVPsOut"/>
    </sequence>
</process>
