<?xml version="1.0" encoding="ISO-8859-1"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
    <xsl:output method="text" version="1.0" encoding="utf-8" omit-xml-declaration="yes" media-type="text/xml" indent="no" />
    <xsl:template match="/">
 
 
package com.smilecoms.commons.sca;

/*

NOTE: This class is auto-generated by a XSL run from with SCA-Client build.xml

ANY MANUAL EDITS WILL BE LOST!

CHANGE THE IMPLEMENTATION CLASS SCAWrapper.java to override any changes

*/
public abstract class AbstractSCAWrapper {
        
    protected boolean callAsAdmin = false;
    protected SCAProperties props = null;
    protected AbstractSCAWrapper(boolean callAsAdmin) {
        this.callAsAdmin = callAsAdmin;
    }    
        
    <xsl:for-each select="jel/jelclass[@type='SCASoap']/methods/method[@visibility='public']">
        <xsl:variable name="funcName" select="@name"/>
        <xsl:variable name="out" select="@fulltype"/>
        <xsl:variable name="in" select="params/param/@fulltype"/>

    <xsl:text>public </xsl:text><xsl:value-of select="$out"/><xsl:text> </xsl:text><xsl:value-of select="$funcName"/>(<xsl:value-of select="$in"/> requestObject) {
        Object ret = new SCADelegate().callSCA("<xsl:value-of select="$funcName"/>", requestObject, callAsAdmin, props);
        return (<xsl:value-of select="$out"/>)ret;
    }
            
    <xsl:text>public </xsl:text><xsl:value-of select="$out"/><xsl:text> </xsl:text><xsl:value-of select="$funcName"/>(<xsl:value-of select="$in"/> requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("<xsl:value-of select="$funcName"/>", requestObject, endPoint, callAsAdmin, props);
        return (<xsl:value-of select="$out"/>)ret;
    }    
    </xsl:for-each>
    <xsl:for-each select="jel/jelclass[@type!='SCASoap']/methods/method[@visibility='public' and @name!='isUp']">
        <xsl:variable name="funcName" select="@name"/>
        <xsl:variable name="out" select="@fulltype"/>
        <xsl:variable name="in" select="params/param/@fulltype"/>
        
    <xsl:text>public </xsl:text><xsl:value-of select="$out"/><xsl:text> </xsl:text><xsl:value-of select="$funcName"/>_Direct(<xsl:value-of select="$in"/> requestObject) {
        Object ret = new PlatformDelegate().callPlatform("<xsl:value-of select="$funcName"/>", requestObject, props);
        return (<xsl:value-of select="$out"/>)ret;
    }             
        <xsl:text>public </xsl:text><xsl:value-of select="$out"/><xsl:text> </xsl:text><xsl:value-of select="$funcName"/>_Direct(<xsl:value-of select="$in"/> requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("<xsl:value-of select="$funcName"/>", requestObject, endPoint, props);
        return (<xsl:value-of select="$out"/>)ret;
    }              
    </xsl:for-each>
} 
 
    </xsl:template>
</xsl:stylesheet>