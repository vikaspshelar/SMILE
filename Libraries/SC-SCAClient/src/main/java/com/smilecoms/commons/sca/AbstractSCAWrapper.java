
 
 
package com.smilecoms.commons.sca;

/*

NOTE: This class is auto-generated by a XSL run from with SCA-Client build.xml

ANY MANUAL EDITS WILL BE LOST!

CHANGE THE IMPLEMENTATION CLASS SCAWrapper.java to override any changes

*/
public abstract class AbstractSCAWrapper {
        
    protected boolean callAsAdmin = false;
    protected SCAProperties props = null;
    protected AbstractSCAWrapper(boolean callAsAdmin) {
        this.callAsAdmin = callAsAdmin;
    }    
        
    public com.smilecoms.commons.sca.Done logCCAgentIntoQueues(com.smilecoms.commons.sca.CCQueueLoginData requestObject) {
        Object ret = new SCADelegate().callSCA("logCCAgentIntoQueues", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done logCCAgentIntoQueues(com.smilecoms.commons.sca.CCQueueLoginData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("logCCAgentIntoQueues", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.TTCommentList getTroubleTicketComments(com.smilecoms.commons.sca.TTCommentQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getTroubleTicketComments", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTCommentList)ret;
    }
            
    public com.smilecoms.commons.sca.TTCommentList getTroubleTicketComments(com.smilecoms.commons.sca.TTCommentQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getTroubleTicketComments", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTCommentList)ret;
    }    
    public com.smilecoms.commons.sca.CreditNoteList getCreditNotes(com.smilecoms.commons.sca.CreditNoteQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getCreditNotes", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CreditNoteList)ret;
    }
            
    public com.smilecoms.commons.sca.CreditNoteList getCreditNotes(com.smilecoms.commons.sca.CreditNoteQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getCreditNotes", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CreditNoteList)ret;
    }    
    public com.smilecoms.commons.sca.ProductInstanceList getProductInstances(com.smilecoms.commons.sca.ProductInstanceQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getProductInstances", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ProductInstanceList)ret;
    }
            
    public com.smilecoms.commons.sca.ProductInstanceList getProductInstances(com.smilecoms.commons.sca.ProductInstanceQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getProductInstances", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ProductInstanceList)ret;
    }    
    public com.smilecoms.commons.sca.TTIssue createTroubleTicketIssue(com.smilecoms.commons.sca.NewTTIssue requestObject) {
        Object ret = new SCADelegate().callSCA("createTroubleTicketIssue", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTIssue)ret;
    }
            
    public com.smilecoms.commons.sca.TTIssue createTroubleTicketIssue(com.smilecoms.commons.sca.NewTTIssue requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("createTroubleTicketIssue", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTIssue)ret;
    }    
    public com.smilecoms.commons.sca.Done updateProperty(com.smilecoms.commons.sca.UpdatePropertyRequest requestObject) {
        Object ret = new SCADelegate().callSCA("updateProperty", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done updateProperty(com.smilecoms.commons.sca.UpdatePropertyRequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("updateProperty", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Account createAccount(com.smilecoms.commons.sca.Account requestObject) {
        Object ret = new SCADelegate().callSCA("createAccount", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Account)ret;
    }
            
    public com.smilecoms.commons.sca.Account createAccount(com.smilecoms.commons.sca.Account requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("createAccount", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Account)ret;
    }    
    public com.smilecoms.commons.sca.Sale generateQuote(com.smilecoms.commons.sca.Sale requestObject) {
        Object ret = new SCADelegate().callSCA("generateQuote", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Sale)ret;
    }
            
    public com.smilecoms.commons.sca.Sale generateQuote(com.smilecoms.commons.sca.Sale requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("generateQuote", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Sale)ret;
    }    
    public com.smilecoms.commons.sca.Done logCCAgentOutQueues(com.smilecoms.commons.sca.CCAgentData requestObject) {
        Object ret = new SCADelegate().callSCA("logCCAgentOutQueues", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done logCCAgentOutQueues(com.smilecoms.commons.sca.CCAgentData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("logCCAgentOutQueues", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.StickyNote modifyStickyNote(com.smilecoms.commons.sca.StickyNote requestObject) {
        Object ret = new SCADelegate().callSCA("modifyStickyNote", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.StickyNote)ret;
    }
            
    public com.smilecoms.commons.sca.StickyNote modifyStickyNote(com.smilecoms.commons.sca.StickyNote requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("modifyStickyNote", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.StickyNote)ret;
    }    
    public com.smilecoms.commons.sca.Done modifyBatchSchedule(com.smilecoms.commons.sca.BatchSchedule requestObject) {
        Object ret = new SCADelegate().callSCA("modifyBatchSchedule", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done modifyBatchSchedule(com.smilecoms.commons.sca.BatchSchedule requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("modifyBatchSchedule", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.TTIssue modifyTroubleTicketIssue(com.smilecoms.commons.sca.TTIssue requestObject) {
        Object ret = new SCADelegate().callSCA("modifyTroubleTicketIssue", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTIssue)ret;
    }
            
    public com.smilecoms.commons.sca.TTIssue modifyTroubleTicketIssue(com.smilecoms.commons.sca.TTIssue requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("modifyTroubleTicketIssue", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTIssue)ret;
    }    
    public com.smilecoms.commons.sca.IncomingCCAgentCallData checkForNewCCAgentCall(com.smilecoms.commons.sca.CCAgentData requestObject) {
        Object ret = new SCADelegate().callSCA("checkForNewCCAgentCall", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.IncomingCCAgentCallData)ret;
    }
            
    public com.smilecoms.commons.sca.IncomingCCAgentCallData checkForNewCCAgentCall(com.smilecoms.commons.sca.CCAgentData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("checkForNewCCAgentCall", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.IncomingCCAgentCallData)ret;
    }    
    public com.smilecoms.commons.sca.Done approvePromotionCode(com.smilecoms.commons.sca.PromotionCodeApprovalData requestObject) {
        Object ret = new SCADelegate().callSCA("approvePromotionCode", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done approvePromotionCode(com.smilecoms.commons.sca.PromotionCodeApprovalData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("approvePromotionCode", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.ReservationResultData checkReservation(com.smilecoms.commons.sca.ReservationRequestData requestObject) {
        Object ret = new SCADelegate().callSCA("checkReservation", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ReservationResultData)ret;
    }
            
    public com.smilecoms.commons.sca.ReservationResultData checkReservation(com.smilecoms.commons.sca.ReservationRequestData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("checkReservation", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ReservationResultData)ret;
    }    
    public com.smilecoms.commons.sca.SCAInteger addContract(com.smilecoms.commons.sca.Contract requestObject) {
        Object ret = new SCADelegate().callSCA("addContract", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SCAInteger)ret;
    }
            
    public com.smilecoms.commons.sca.SCAInteger addContract(com.smilecoms.commons.sca.Contract requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("addContract", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SCAInteger)ret;
    }    
    public com.smilecoms.commons.sca.Done modifyOrganisation(com.smilecoms.commons.sca.Organisation requestObject) {
        Object ret = new SCADelegate().callSCA("modifyOrganisation", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done modifyOrganisation(com.smilecoms.commons.sca.Organisation requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("modifyOrganisation", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.PropertyResponse getProperty(com.smilecoms.commons.sca.PropertyRequest requestObject) {
        Object ret = new SCADelegate().callSCA("getProperty", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PropertyResponse)ret;
    }
            
    public com.smilecoms.commons.sca.PropertyResponse getProperty(com.smilecoms.commons.sca.PropertyRequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getProperty", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PropertyResponse)ret;
    }    
    public com.smilecoms.commons.sca.Done splitUnitCredit(com.smilecoms.commons.sca.SplitUnitCreditData requestObject) {
        Object ret = new SCADelegate().callSCA("splitUnitCredit", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done splitUnitCredit(com.smilecoms.commons.sca.SplitUnitCreditData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("splitUnitCredit", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.SCAInteger addCustomer(com.smilecoms.commons.sca.Customer requestObject) {
        Object ret = new SCADelegate().callSCA("addCustomer", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SCAInteger)ret;
    }
            
    public com.smilecoms.commons.sca.SCAInteger addCustomer(com.smilecoms.commons.sca.Customer requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("addCustomer", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SCAInteger)ret;
    }    
    public com.smilecoms.commons.sca.IMSSubscription getIMSSubscription(com.smilecoms.commons.sca.IMSSubscriptionQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getIMSSubscription", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.IMSSubscription)ret;
    }
            
    public com.smilecoms.commons.sca.IMSSubscription getIMSSubscription(com.smilecoms.commons.sca.IMSSubscriptionQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getIMSSubscription", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.IMSSubscription)ret;
    }    
    public com.smilecoms.commons.sca.Done flushPropertyCache(com.smilecoms.commons.sca.FlushPropertyCacheRequest requestObject) {
        Object ret = new SCADelegate().callSCA("flushPropertyCache", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done flushPropertyCache(com.smilecoms.commons.sca.FlushPropertyCacheRequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("flushPropertyCache", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.UnitCreditSpecificationList getUnitCreditSpecifications(com.smilecoms.commons.sca.UnitCreditSpecificationQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getUnitCreditSpecifications", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.UnitCreditSpecificationList)ret;
    }
            
    public com.smilecoms.commons.sca.UnitCreditSpecificationList getUnitCreditSpecifications(com.smilecoms.commons.sca.UnitCreditSpecificationQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getUnitCreditSpecifications", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.UnitCreditSpecificationList)ret;
    }    
    public com.smilecoms.commons.sca.CustomerQueryOtherMNOResponse getCustomersOtherMNO(com.smilecoms.commons.sca.CustomerQueryOtherMNORequest requestObject) {
        Object ret = new SCADelegate().callSCA("getCustomersOtherMNO", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CustomerQueryOtherMNOResponse)ret;
    }
            
    public com.smilecoms.commons.sca.CustomerQueryOtherMNOResponse getCustomersOtherMNO(com.smilecoms.commons.sca.CustomerQueryOtherMNORequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getCustomersOtherMNO", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CustomerQueryOtherMNOResponse)ret;
    }    
    public com.smilecoms.commons.sca.InventoryList getInventory(com.smilecoms.commons.sca.InventoryQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getInventory", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.InventoryList)ret;
    }
            
    public com.smilecoms.commons.sca.InventoryList getInventory(com.smilecoms.commons.sca.InventoryQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getInventory", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.InventoryList)ret;
    }    
    public com.smilecoms.commons.sca.Done performIMEIStatusChange(com.smilecoms.commons.sca.IMEIStatusChangeRequest requestObject) {
        Object ret = new SCADelegate().callSCA("performIMEIStatusChange", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done performIMEIStatusChange(com.smilecoms.commons.sca.IMEIStatusChangeRequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("performIMEIStatusChange", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done closeSalesLead(com.smilecoms.commons.sca.TTCloseSalesLeadIssueQuery requestObject) {
        Object ret = new SCADelegate().callSCA("closeSalesLead", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done closeSalesLead(com.smilecoms.commons.sca.TTCloseSalesLeadIssueQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("closeSalesLead", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done addAddress(com.smilecoms.commons.sca.Address requestObject) {
        Object ret = new SCADelegate().callSCA("addAddress", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done addAddress(com.smilecoms.commons.sca.Address requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("addAddress", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.StickyNoteList getEntitiesStickyNotes(com.smilecoms.commons.sca.StickyNoteEntityIdentifier requestObject) {
        Object ret = new SCADelegate().callSCA("getEntitiesStickyNotes", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.StickyNoteList)ret;
    }
            
    public com.smilecoms.commons.sca.StickyNoteList getEntitiesStickyNotes(com.smilecoms.commons.sca.StickyNoteEntityIdentifier requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getEntitiesStickyNotes", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.StickyNoteList)ret;
    }    
    public com.smilecoms.commons.sca.PCRFData getPCRFData(com.smilecoms.commons.sca.PCRFDataQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getPCRFData", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PCRFData)ret;
    }
            
    public com.smilecoms.commons.sca.PCRFData getPCRFData(com.smilecoms.commons.sca.PCRFDataQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getPCRFData", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PCRFData)ret;
    }    
    public com.smilecoms.commons.sca.CashInList getCashIns(com.smilecoms.commons.sca.CashInQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getCashIns", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CashInList)ret;
    }
            
    public com.smilecoms.commons.sca.CashInList getCashIns(com.smilecoms.commons.sca.CashInQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getCashIns", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CashInList)ret;
    }    
    public com.smilecoms.commons.sca.PortOrdersList getPortOrders(com.smilecoms.commons.sca.PortOrdersQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getPortOrders", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PortOrdersList)ret;
    }
            
    public com.smilecoms.commons.sca.PortOrdersList getPortOrders(com.smilecoms.commons.sca.PortOrdersQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getPortOrders", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PortOrdersList)ret;
    }    
    public com.smilecoms.commons.sca.SSOPasswordResetLink sendSSOPasswordResetLink(com.smilecoms.commons.sca.SSOPasswordResetLinkData requestObject) {
        Object ret = new SCADelegate().callSCA("sendSSOPasswordResetLink", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SSOPasswordResetLink)ret;
    }
            
    public com.smilecoms.commons.sca.SSOPasswordResetLink sendSSOPasswordResetLink(com.smilecoms.commons.sca.SSOPasswordResetLinkData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("sendSSOPasswordResetLink", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SSOPasswordResetLink)ret;
    }    
    public com.smilecoms.commons.sca.RatePlan getRatePlan(com.smilecoms.commons.sca.SCAInteger requestObject) {
        Object ret = new SCADelegate().callSCA("getRatePlan", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.RatePlan)ret;
    }
            
    public com.smilecoms.commons.sca.RatePlan getRatePlan(com.smilecoms.commons.sca.SCAInteger requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getRatePlan", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.RatePlan)ret;
    }    
    public com.smilecoms.commons.sca.TenantData getCustomerTenant(com.smilecoms.commons.sca.TenantQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getCustomerTenant", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TenantData)ret;
    }
            
    public com.smilecoms.commons.sca.TenantData getCustomerTenant(com.smilecoms.commons.sca.TenantQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getCustomerTenant", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TenantData)ret;
    }    
    public com.smilecoms.commons.sca.UnitCreditInstanceList getUnitCreditInstances(com.smilecoms.commons.sca.UnitCreditInstanceQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getUnitCreditInstances", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.UnitCreditInstanceList)ret;
    }
            
    public com.smilecoms.commons.sca.UnitCreditInstanceList getUnitCreditInstances(com.smilecoms.commons.sca.UnitCreditInstanceQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getUnitCreditInstances", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.UnitCreditInstanceList)ret;
    }    
    public com.smilecoms.commons.sca.Done batchUpdatePrepaidStrips(com.smilecoms.commons.sca.PrepaidStripBatchData requestObject) {
        Object ret = new SCADelegate().callSCA("batchUpdatePrepaidStrips", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done batchUpdatePrepaidStrips(com.smilecoms.commons.sca.PrepaidStripBatchData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("batchUpdatePrepaidStrips", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.AccountHistory getAccountHistory(com.smilecoms.commons.sca.AccountHistoryQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getAccountHistory", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.AccountHistory)ret;
    }
            
    public com.smilecoms.commons.sca.AccountHistory getAccountHistory(com.smilecoms.commons.sca.AccountHistoryQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getAccountHistory", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.AccountHistory)ret;
    }    
    public com.smilecoms.commons.sca.ThirdPartyAuthorisationRuleSetList getThirdPartyAuthorisationRules(com.smilecoms.commons.sca.SCAInteger requestObject) {
        Object ret = new SCADelegate().callSCA("getThirdPartyAuthorisationRules", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ThirdPartyAuthorisationRuleSetList)ret;
    }
            
    public com.smilecoms.commons.sca.ThirdPartyAuthorisationRuleSetList getThirdPartyAuthorisationRules(com.smilecoms.commons.sca.SCAInteger requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getThirdPartyAuthorisationRules", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ThirdPartyAuthorisationRuleSetList)ret;
    }    
    public com.smilecoms.commons.sca.ProductSpecificationList getProductSpecifications(com.smilecoms.commons.sca.ProductSpecificationQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getProductSpecifications", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ProductSpecificationList)ret;
    }
            
    public com.smilecoms.commons.sca.ProductSpecificationList getProductSpecifications(com.smilecoms.commons.sca.ProductSpecificationQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getProductSpecifications", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ProductSpecificationList)ret;
    }    
    public com.smilecoms.commons.sca.Done modifyContract(com.smilecoms.commons.sca.Contract requestObject) {
        Object ret = new SCADelegate().callSCA("modifyContract", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done modifyContract(com.smilecoms.commons.sca.Contract requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("modifyContract", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.TTComment modifyTroubleTicketComment(com.smilecoms.commons.sca.TTComment requestObject) {
        Object ret = new SCADelegate().callSCA("modifyTroubleTicketComment", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTComment)ret;
    }
            
    public com.smilecoms.commons.sca.TTComment modifyTroubleTicketComment(com.smilecoms.commons.sca.TTComment requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("modifyTroubleTicketComment", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTComment)ret;
    }    
    public com.smilecoms.commons.sca.Done getDefacedInfo(com.smilecoms.commons.sca.VerifyDefacedCustomerRequest requestObject) {
        Object ret = new SCADelegate().callSCA("getDefacedInfo", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done getDefacedInfo(com.smilecoms.commons.sca.VerifyDefacedCustomerRequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getDefacedInfo", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done reverseTransactions(com.smilecoms.commons.sca.TransactionReversalData requestObject) {
        Object ret = new SCADelegate().callSCA("reverseTransactions", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done reverseTransactions(com.smilecoms.commons.sca.TransactionReversalData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("reverseTransactions", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.OrganisationList getOrganisations(com.smilecoms.commons.sca.OrganisationQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getOrganisations", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.OrganisationList)ret;
    }
            
    public com.smilecoms.commons.sca.OrganisationList getOrganisations(com.smilecoms.commons.sca.OrganisationQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getOrganisations", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.OrganisationList)ret;
    }    
    public com.smilecoms.commons.sca.EventList getEvents(com.smilecoms.commons.sca.EventQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getEvents", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.EventList)ret;
    }
            
    public com.smilecoms.commons.sca.EventList getEvents(com.smilecoms.commons.sca.EventQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getEvents", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.EventList)ret;
    }    
    public com.smilecoms.commons.sca.Done modifySale(com.smilecoms.commons.sca.SaleModificationData requestObject) {
        Object ret = new SCADelegate().callSCA("modifySale", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done modifySale(com.smilecoms.commons.sca.SaleModificationData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("modifySale", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.StickyNote addStickyNote(com.smilecoms.commons.sca.NewStickyNote requestObject) {
        Object ret = new SCADelegate().callSCA("addStickyNote", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.StickyNote)ret;
    }
            
    public com.smilecoms.commons.sca.StickyNote addStickyNote(com.smilecoms.commons.sca.NewStickyNote requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("addStickyNote", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.StickyNote)ret;
    }    
    public com.smilecoms.commons.sca.Done deleteStickyNote(com.smilecoms.commons.sca.SCAInteger requestObject) {
        Object ret = new SCADelegate().callSCA("deleteStickyNote", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done deleteStickyNote(com.smilecoms.commons.sca.SCAInteger requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("deleteStickyNote", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done redeemPrepaidStrip(com.smilecoms.commons.sca.PrepaidStripRedemptionData requestObject) {
        Object ret = new SCADelegate().callSCA("redeemPrepaidStrip", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done redeemPrepaidStrip(com.smilecoms.commons.sca.PrepaidStripRedemptionData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("redeemPrepaidStrip", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Sale processSale(com.smilecoms.commons.sca.Sale requestObject) {
        Object ret = new SCADelegate().callSCA("processSale", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Sale)ret;
    }
            
    public com.smilecoms.commons.sca.Sale processSale(com.smilecoms.commons.sca.Sale requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("processSale", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Sale)ret;
    }    
    public com.smilecoms.commons.sca.Done createEvent(com.smilecoms.commons.sca.Event requestObject) {
        Object ret = new SCADelegate().callSCA("createEvent", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done createEvent(com.smilecoms.commons.sca.Event requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("createEvent", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.StickyNoteTypeList getStickyNoteTypeList(com.smilecoms.commons.sca.SCAString requestObject) {
        Object ret = new SCADelegate().callSCA("getStickyNoteTypeList", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.StickyNoteTypeList)ret;
    }
            
    public com.smilecoms.commons.sca.StickyNoteTypeList getStickyNoteTypeList(com.smilecoms.commons.sca.SCAString requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getStickyNoteTypeList", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.StickyNoteTypeList)ret;
    }    
    public com.smilecoms.commons.sca.Photograph getPhoto(com.smilecoms.commons.sca.SCAString requestObject) {
        Object ret = new SCADelegate().callSCA("getPhoto", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Photograph)ret;
    }
            
    public com.smilecoms.commons.sca.Photograph getPhoto(com.smilecoms.commons.sca.SCAString requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getPhoto", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Photograph)ret;
    }    
    public com.smilecoms.commons.sca.TTUser createTroubleTicketUser(com.smilecoms.commons.sca.SCAString requestObject) {
        Object ret = new SCADelegate().callSCA("createTroubleTicketUser", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTUser)ret;
    }
            
    public com.smilecoms.commons.sca.TTUser createTroubleTicketUser(com.smilecoms.commons.sca.SCAString requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("createTroubleTicketUser", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTUser)ret;
    }    
    public com.smilecoms.commons.sca.TransferGraph getTransferGraph(com.smilecoms.commons.sca.TransferGraphQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getTransferGraph", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TransferGraph)ret;
    }
            
    public com.smilecoms.commons.sca.TransferGraph getTransferGraph(com.smilecoms.commons.sca.TransferGraphQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getTransferGraph", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TransferGraph)ret;
    }    
    public com.smilecoms.commons.sca.Done modifyAccount(com.smilecoms.commons.sca.Account requestObject) {
        Object ret = new SCADelegate().callSCA("modifyAccount", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done modifyAccount(com.smilecoms.commons.sca.Account requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("modifyAccount", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done runBatch(com.smilecoms.commons.sca.BatchRequest requestObject) {
        Object ret = new SCADelegate().callSCA("runBatch", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done runBatch(com.smilecoms.commons.sca.BatchRequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("runBatch", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done transferBalance(com.smilecoms.commons.sca.BalanceTransferData requestObject) {
        Object ret = new SCADelegate().callSCA("transferBalance", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done transferBalance(com.smilecoms.commons.sca.BalanceTransferData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("transferBalance", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.SCAInteger addOrganisation(com.smilecoms.commons.sca.Organisation requestObject) {
        Object ret = new SCADelegate().callSCA("addOrganisation", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SCAInteger)ret;
    }
            
    public com.smilecoms.commons.sca.SCAInteger addOrganisation(com.smilecoms.commons.sca.Organisation requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("addOrganisation", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SCAInteger)ret;
    }    
    public com.smilecoms.commons.sca.TTComment createTroubleTicketComment(com.smilecoms.commons.sca.TTComment requestObject) {
        Object ret = new SCADelegate().callSCA("createTroubleTicketComment", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTComment)ret;
    }
            
    public com.smilecoms.commons.sca.TTComment createTroubleTicketComment(com.smilecoms.commons.sca.TTComment requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("createTroubleTicketComment", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTComment)ret;
    }    
    public com.smilecoms.commons.sca.Done deregisterIMPU(com.smilecoms.commons.sca.DeregisterIMPUQuery requestObject) {
        Object ret = new SCADelegate().callSCA("deregisterIMPU", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done deregisterIMPU(com.smilecoms.commons.sca.DeregisterIMPUQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("deregisterIMPU", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.PlatformEndPointList isUp(com.smilecoms.commons.sca.SCAString requestObject) {
        Object ret = new SCADelegate().callSCA("isUp", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PlatformEndPointList)ret;
    }
            
    public com.smilecoms.commons.sca.PlatformEndPointList isUp(com.smilecoms.commons.sca.SCAString requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("isUp", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PlatformEndPointList)ret;
    }    
    public com.smilecoms.commons.sca.Done processPaymentNotification(com.smilecoms.commons.sca.PaymentNotificationData requestObject) {
        Object ret = new SCADelegate().callSCA("processPaymentNotification", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done processPaymentNotification(com.smilecoms.commons.sca.PaymentNotificationData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("processPaymentNotification", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done addResource(com.smilecoms.commons.sca.Resource requestObject) {
        Object ret = new SCADelegate().callSCA("addResource", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done addResource(com.smilecoms.commons.sca.Resource requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("addResource", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.InventoryList getUpSizeInventory(com.smilecoms.commons.sca.UpSizeInventoryQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getUpSizeInventory", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.InventoryList)ret;
    }
            
    public com.smilecoms.commons.sca.InventoryList getUpSizeInventory(com.smilecoms.commons.sca.UpSizeInventoryQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getUpSizeInventory", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.InventoryList)ret;
    }    
    public com.smilecoms.commons.sca.ContractList getContracts(com.smilecoms.commons.sca.ContractQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getContracts", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ContractList)ret;
    }
            
    public com.smilecoms.commons.sca.ContractList getContracts(com.smilecoms.commons.sca.ContractQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getContracts", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ContractList)ret;
    }    
    public com.smilecoms.commons.sca.Done sendCustomerCommunication(com.smilecoms.commons.sca.CustomerCommunicationData requestObject) {
        Object ret = new SCADelegate().callSCA("sendCustomerCommunication", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done sendCustomerCommunication(com.smilecoms.commons.sca.CustomerCommunicationData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("sendCustomerCommunication", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done deleteAddress(com.smilecoms.commons.sca.Address requestObject) {
        Object ret = new SCADelegate().callSCA("deleteAddress", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done deleteAddress(com.smilecoms.commons.sca.Address requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("deleteAddress", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done getDetailsForIMEIStatusChange(com.smilecoms.commons.sca.IMEIStatusChangeGetinfoRequest requestObject) {
        Object ret = new SCADelegate().callSCA("getDetailsForIMEIStatusChange", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done getDetailsForIMEIStatusChange(com.smilecoms.commons.sca.IMEIStatusChangeGetinfoRequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getDetailsForIMEIStatusChange", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.NumberList getAvailableNumbers(com.smilecoms.commons.sca.NumbersQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getAvailableNumbers", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.NumberList)ret;
    }
            
    public com.smilecoms.commons.sca.NumberList getAvailableNumbers(com.smilecoms.commons.sca.NumbersQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getAvailableNumbers", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.NumberList)ret;
    }    
    public com.smilecoms.commons.sca.Done purgeUserData(com.smilecoms.commons.sca.PurgeUserDataQuery requestObject) {
        Object ret = new SCADelegate().callSCA("purgeUserData", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done purgeUserData(com.smilecoms.commons.sca.PurgeUserDataQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("purgeUserData", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.SIMVerifyResponse performSIMComplianceCheck(com.smilecoms.commons.sca.SIMVerifyRequest requestObject) {
        Object ret = new SCADelegate().callSCA("performSIMComplianceCheck", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SIMVerifyResponse)ret;
    }
            
    public com.smilecoms.commons.sca.SIMVerifyResponse performSIMComplianceCheck(com.smilecoms.commons.sca.SIMVerifyRequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("performSIMComplianceCheck", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SIMVerifyResponse)ret;
    }    
    public com.smilecoms.commons.sca.GeneralQueryResponse runGeneralQuery(com.smilecoms.commons.sca.GeneralQueryRequest requestObject) {
        Object ret = new SCADelegate().callSCA("runGeneralQuery", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.GeneralQueryResponse)ret;
    }
            
    public com.smilecoms.commons.sca.GeneralQueryResponse runGeneralQuery(com.smilecoms.commons.sca.GeneralQueryRequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("runGeneralQuery", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.GeneralQueryResponse)ret;
    }    
    public com.smilecoms.commons.sca.ServiceActivationData getServiceActivationData(com.smilecoms.commons.sca.IMSSubscriptionQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getServiceActivationData", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ServiceActivationData)ret;
    }
            
    public com.smilecoms.commons.sca.ServiceActivationData getServiceActivationData(com.smilecoms.commons.sca.IMSSubscriptionQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getServiceActivationData", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ServiceActivationData)ret;
    }    
    public com.smilecoms.commons.sca.TTJiraUserList getJiraUsers(com.smilecoms.commons.sca.TTJiraUserQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getJiraUsers", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTJiraUserList)ret;
    }
            
    public com.smilecoms.commons.sca.TTJiraUserList getJiraUsers(com.smilecoms.commons.sca.TTJiraUserQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getJiraUsers", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTJiraUserList)ret;
    }    
    public com.smilecoms.commons.sca.ResourceList getResourceList(com.smilecoms.commons.sca.SCAString requestObject) {
        Object ret = new SCADelegate().callSCA("getResourceList", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ResourceList)ret;
    }
            
    public com.smilecoms.commons.sca.ResourceList getResourceList(com.smilecoms.commons.sca.SCAString requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getResourceList", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ResourceList)ret;
    }    
    public com.smilecoms.commons.sca.CreditNote processReturn(com.smilecoms.commons.sca.ReturnData requestObject) {
        Object ret = new SCADelegate().callSCA("processReturn", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CreditNote)ret;
    }
            
    public com.smilecoms.commons.sca.CreditNote processReturn(com.smilecoms.commons.sca.ReturnData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("processReturn", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CreditNote)ret;
    }    
    public com.smilecoms.commons.sca.Done processOrder(com.smilecoms.commons.sca.ProductOrder requestObject) {
        Object ret = new SCADelegate().callSCA("processOrder", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done processOrder(com.smilecoms.commons.sca.ProductOrder requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("processOrder", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.SoldStockLocationList getSoldStockLocations(com.smilecoms.commons.sca.SoldStockLocationQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getSoldStockLocations", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SoldStockLocationList)ret;
    }
            
    public com.smilecoms.commons.sca.SoldStockLocationList getSoldStockLocations(com.smilecoms.commons.sca.SoldStockLocationQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getSoldStockLocations", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SoldStockLocationList)ret;
    }    
    public com.smilecoms.commons.sca.Done provisionSIMCard(com.smilecoms.commons.sca.NewSIMCardData requestObject) {
        Object ret = new SCADelegate().callSCA("provisionSIMCard", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done provisionSIMCard(com.smilecoms.commons.sca.NewSIMCardData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("provisionSIMCard", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done performSIMSwap(com.smilecoms.commons.sca.SIMSwapRequest requestObject) {
        Object ret = new SCADelegate().callSCA("performSIMSwap", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done performSIMSwap(com.smilecoms.commons.sca.SIMSwapRequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("performSIMSwap", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done purchaseUnitCredit(com.smilecoms.commons.sca.PurchaseUnitCreditRequest requestObject) {
        Object ret = new SCADelegate().callSCA("purchaseUnitCredit", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done purchaseUnitCredit(com.smilecoms.commons.sca.PurchaseUnitCreditRequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("purchaseUnitCredit", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.SalesList getSales(com.smilecoms.commons.sca.SalesQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getSales", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SalesList)ret;
    }
            
    public com.smilecoms.commons.sca.SalesList getSales(com.smilecoms.commons.sca.SalesQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getSales", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SalesList)ret;
    }    
    public com.smilecoms.commons.sca.Done resetSSOPassword(com.smilecoms.commons.sca.SSOPasswordResetData requestObject) {
        Object ret = new SCADelegate().callSCA("resetSSOPassword", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done resetSSOPassword(com.smilecoms.commons.sca.SSOPasswordResetData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("resetSSOPassword", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.AuthenticationResult authenticate(com.smilecoms.commons.sca.AuthenticationQuery requestObject) {
        Object ret = new SCADelegate().callSCA("authenticate", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.AuthenticationResult)ret;
    }
            
    public com.smilecoms.commons.sca.AuthenticationResult authenticate(com.smilecoms.commons.sca.AuthenticationQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("authenticate", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.AuthenticationResult)ret;
    }    
    public com.smilecoms.commons.sca.Done modifyCustomer(com.smilecoms.commons.sca.Customer requestObject) {
        Object ret = new SCADelegate().callSCA("modifyCustomer", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done modifyCustomer(com.smilecoms.commons.sca.Customer requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("modifyCustomer", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.NAIIdentity getNAIIdentity(com.smilecoms.commons.sca.NAIIdentityQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getNAIIdentity", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.NAIIdentity)ret;
    }
            
    public com.smilecoms.commons.sca.NAIIdentity getNAIIdentity(com.smilecoms.commons.sca.NAIIdentityQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getNAIIdentity", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.NAIIdentity)ret;
    }    
    public com.smilecoms.commons.sca.ReverseGLOut reverseGL(com.smilecoms.commons.sca.ReverseGLData requestObject) {
        Object ret = new SCADelegate().callSCA("reverseGL", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ReverseGLOut)ret;
    }
            
    public com.smilecoms.commons.sca.ReverseGLOut reverseGL(com.smilecoms.commons.sca.ReverseGLData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("reverseGL", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ReverseGLOut)ret;
    }    
    public com.smilecoms.commons.sca.Done modifyUnitCredit(com.smilecoms.commons.sca.UnitCreditInstance requestObject) {
        Object ret = new SCADelegate().callSCA("modifyUnitCredit", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done modifyUnitCredit(com.smilecoms.commons.sca.UnitCreditInstance requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("modifyUnitCredit", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.PrepaidStrip getPrepaidStrip(com.smilecoms.commons.sca.PrepaidStripQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getPrepaidStrip", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PrepaidStrip)ret;
    }
            
    public com.smilecoms.commons.sca.PrepaidStrip getPrepaidStrip(com.smilecoms.commons.sca.PrepaidStripQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getPrepaidStrip", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PrepaidStrip)ret;
    }    
    public com.smilecoms.commons.sca.CreateStandardGLOut createStandardGL(com.smilecoms.commons.sca.CreateStandardGLData requestObject) {
        Object ret = new SCADelegate().callSCA("createStandardGL", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CreateStandardGLOut)ret;
    }
            
    public com.smilecoms.commons.sca.CreateStandardGLOut createStandardGL(com.smilecoms.commons.sca.CreateStandardGLData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("createStandardGL", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CreateStandardGLOut)ret;
    }    
    public com.smilecoms.commons.sca.StickyNoteType getStickyNoteType(com.smilecoms.commons.sca.SCAString requestObject) {
        Object ret = new SCADelegate().callSCA("getStickyNoteType", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.StickyNoteType)ret;
    }
            
    public com.smilecoms.commons.sca.StickyNoteType getStickyNoteType(com.smilecoms.commons.sca.SCAString requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getStickyNoteType", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.StickyNoteType)ret;
    }    
    public com.smilecoms.commons.sca.Done sendShortMessage(com.smilecoms.commons.sca.ShortMessage requestObject) {
        Object ret = new SCADelegate().callSCA("sendShortMessage", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done sendShortMessage(com.smilecoms.commons.sca.ShortMessage requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("sendShortMessage", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.TNFData getTNFData(com.smilecoms.commons.sca.TNFQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getTNFData", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TNFData)ret;
    }
            
    public com.smilecoms.commons.sca.TNFData getTNFData(com.smilecoms.commons.sca.TNFQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getTNFData", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TNFData)ret;
    }    
    public com.smilecoms.commons.sca.Done postProcessSale(com.smilecoms.commons.sca.SalePostProcessingData requestObject) {
        Object ret = new SCADelegate().callSCA("postProcessSale", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done postProcessSale(com.smilecoms.commons.sca.SalePostProcessingData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("postProcessSale", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done deleteContract(com.smilecoms.commons.sca.SCAInteger requestObject) {
        Object ret = new SCADelegate().callSCA("deleteContract", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done deleteContract(com.smilecoms.commons.sca.SCAInteger requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("deleteContract", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.AccountSummary getAccountSummary(com.smilecoms.commons.sca.AccountSummaryQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getAccountSummary", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.AccountSummary)ret;
    }
            
    public com.smilecoms.commons.sca.AccountSummary getAccountSummary(com.smilecoms.commons.sca.AccountSummaryQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getAccountSummary", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.AccountSummary)ret;
    }    
    public com.smilecoms.commons.sca.Done storeCampaignData(com.smilecoms.commons.sca.CampaignData requestObject) {
        Object ret = new SCADelegate().callSCA("storeCampaignData", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done storeCampaignData(com.smilecoms.commons.sca.CampaignData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("storeCampaignData", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done createScheduledAccountHistory(com.smilecoms.commons.sca.ScheduledAccountHistory requestObject) {
        Object ret = new SCADelegate().callSCA("createScheduledAccountHistory", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done createScheduledAccountHistory(com.smilecoms.commons.sca.ScheduledAccountHistory requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("createScheduledAccountHistory", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.BatchScheduleList getBatchSchedules(com.smilecoms.commons.sca.SCAInteger requestObject) {
        Object ret = new SCADelegate().callSCA("getBatchSchedules", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.BatchScheduleList)ret;
    }
            
    public com.smilecoms.commons.sca.BatchScheduleList getBatchSchedules(com.smilecoms.commons.sca.SCAInteger requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getBatchSchedules", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.BatchScheduleList)ret;
    }    
    public com.smilecoms.commons.sca.TTCheck isTTUser(com.smilecoms.commons.sca.UserIDToCheck requestObject) {
        Object ret = new SCADelegate().callSCA("isTTUser", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTCheck)ret;
    }
            
    public com.smilecoms.commons.sca.TTCheck isTTUser(com.smilecoms.commons.sca.UserIDToCheck requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("isTTUser", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTCheck)ret;
    }    
    public com.smilecoms.commons.sca.CashInData processCashIn(com.smilecoms.commons.sca.CashInData requestObject) {
        Object ret = new SCADelegate().callSCA("processCashIn", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CashInData)ret;
    }
            
    public com.smilecoms.commons.sca.CashInData processCashIn(com.smilecoms.commons.sca.CashInData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("processCashIn", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CashInData)ret;
    }    
    public com.smilecoms.commons.sca.TTMetaData getTroubleTicketMetaData(com.smilecoms.commons.sca.TTMetaDataQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getTroubleTicketMetaData", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTMetaData)ret;
    }
            
    public com.smilecoms.commons.sca.TTMetaData getTroubleTicketMetaData(com.smilecoms.commons.sca.TTMetaDataQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getTroubleTicketMetaData", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTMetaData)ret;
    }    
    public com.smilecoms.commons.sca.TTIssueList getTroubleTicketIssues(com.smilecoms.commons.sca.TTIssueQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getTroubleTicketIssues", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTIssueList)ret;
    }
            
    public com.smilecoms.commons.sca.TTIssueList getTroubleTicketIssues(com.smilecoms.commons.sca.TTIssueQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getTroubleTicketIssues", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.TTIssueList)ret;
    }    
    public com.smilecoms.commons.sca.Done modifyIMSSubscriptionStatus(com.smilecoms.commons.sca.IMSSubscriptionStatusUpdateData requestObject) {
        Object ret = new SCADelegate().callSCA("modifyIMSSubscriptionStatus", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done modifyIMSSubscriptionStatus(com.smilecoms.commons.sca.IMSSubscriptionStatusUpdateData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("modifyIMSSubscriptionStatus", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.IMEICheckResponse performIMEICheck(com.smilecoms.commons.sca.IMEICheckRequest requestObject) {
        Object ret = new SCADelegate().callSCA("performIMEICheck", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.IMEICheckResponse)ret;
    }
            
    public com.smilecoms.commons.sca.IMEICheckResponse performIMEICheck(com.smilecoms.commons.sca.IMEICheckRequest requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("performIMEICheck", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.IMEICheckResponse)ret;
    }    
    public com.smilecoms.commons.sca.StickyNote getStickyNote(com.smilecoms.commons.sca.SCAInteger requestObject) {
        Object ret = new SCADelegate().callSCA("getStickyNote", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.StickyNote)ret;
    }
            
    public com.smilecoms.commons.sca.StickyNote getStickyNote(com.smilecoms.commons.sca.SCAInteger requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getStickyNote", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.StickyNote)ret;
    }    
    public com.smilecoms.commons.sca.CustomerList getCustomers(com.smilecoms.commons.sca.CustomerQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getCustomers", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CustomerList)ret;
    }
            
    public com.smilecoms.commons.sca.CustomerList getCustomers(com.smilecoms.commons.sca.CustomerQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getCustomers", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.CustomerList)ret;
    }    
    public com.smilecoms.commons.sca.SCSCFIMPUData getSCSCFIMPUData(com.smilecoms.commons.sca.SCSCFIMPUQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getSCSCFIMPUData", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SCSCFIMPUData)ret;
    }
            
    public com.smilecoms.commons.sca.SCSCFIMPUData getSCSCFIMPUData(com.smilecoms.commons.sca.SCSCFIMPUQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getSCSCFIMPUData", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.SCSCFIMPUData)ret;
    }    
    public java.lang.String isStale(com.smilecoms.commons.sca.SCADateTime requestObject) {
        Object ret = new SCADelegate().callSCA("isStale", requestObject, callAsAdmin, props);
        return (java.lang.String)ret;
    }
            
    public java.lang.String isStale(com.smilecoms.commons.sca.SCADateTime requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("isStale", requestObject, endPoint, callAsAdmin, props);
        return (java.lang.String)ret;
    }    
    public com.smilecoms.commons.sca.Done processReturnOrReplacement(com.smilecoms.commons.sca.Return requestObject) {
        Object ret = new SCADelegate().callSCA("processReturnOrReplacement", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done processReturnOrReplacement(com.smilecoms.commons.sca.Return requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("processReturnOrReplacement", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.PrepaidStrips createPrepaidStrips(com.smilecoms.commons.sca.NewPrepaidStripsData requestObject) {
        Object ret = new SCADelegate().callSCA("createPrepaidStrips", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PrepaidStrips)ret;
    }
            
    public com.smilecoms.commons.sca.PrepaidStrips createPrepaidStrips(com.smilecoms.commons.sca.NewPrepaidStripsData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("createPrepaidStrips", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PrepaidStrips)ret;
    }    
    public com.smilecoms.commons.sca.PortInEvent handlePortInEvent(com.smilecoms.commons.sca.PortInEvent requestObject) {
        Object ret = new SCADelegate().callSCA("handlePortInEvent", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PortInEvent)ret;
    }
            
    public com.smilecoms.commons.sca.PortInEvent handlePortInEvent(com.smilecoms.commons.sca.PortInEvent requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("handlePortInEvent", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.PortInEvent)ret;
    }    
    public com.smilecoms.commons.sca.Done deleteFutureEvent(com.smilecoms.commons.sca.SCALong requestObject) {
        Object ret = new SCADelegate().callSCA("deleteFutureEvent", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done deleteFutureEvent(com.smilecoms.commons.sca.SCALong requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("deleteFutureEvent", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.Done modifyAddress(com.smilecoms.commons.sca.Address requestObject) {
        Object ret = new SCADelegate().callSCA("modifyAddress", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done modifyAddress(com.smilecoms.commons.sca.Address requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("modifyAddress", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.ServiceInstanceList getServiceInstances(com.smilecoms.commons.sca.ServiceInstanceQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getServiceInstances", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ServiceInstanceList)ret;
    }
            
    public com.smilecoms.commons.sca.ServiceInstanceList getServiceInstances(com.smilecoms.commons.sca.ServiceInstanceQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getServiceInstances", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ServiceInstanceList)ret;
    }    
    public com.smilecoms.commons.sca.AccountList getAccounts(com.smilecoms.commons.sca.AccountQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getAccounts", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.AccountList)ret;
    }
            
    public com.smilecoms.commons.sca.AccountList getAccounts(com.smilecoms.commons.sca.AccountQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getAccounts", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.AccountList)ret;
    }    
    public com.smilecoms.commons.sca.Done setSoldStockLocations(com.smilecoms.commons.sca.SoldStockLocationData requestObject) {
        Object ret = new SCADelegate().callSCA("setSoldStockLocations", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }
            
    public com.smilecoms.commons.sca.Done setSoldStockLocations(com.smilecoms.commons.sca.SoldStockLocationData requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("setSoldStockLocations", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.Done)ret;
    }    
    public com.smilecoms.commons.sca.VoucherLockForAccount getVoucherLockForAccount(com.smilecoms.commons.sca.VoucherLockForAccountQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getVoucherLockForAccount", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.VoucherLockForAccount)ret;
    }
            
    public com.smilecoms.commons.sca.VoucherLockForAccount getVoucherLockForAccount(com.smilecoms.commons.sca.VoucherLockForAccountQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getVoucherLockForAccount", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.VoucherLockForAccount)ret;
    }    
    public com.smilecoms.commons.sca.ServiceSpecification getServiceSpecification(com.smilecoms.commons.sca.ServiceSpecificationQuery requestObject) {
        Object ret = new SCADelegate().callSCA("getServiceSpecification", requestObject, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ServiceSpecification)ret;
    }
            
    public com.smilecoms.commons.sca.ServiceSpecification getServiceSpecification(com.smilecoms.commons.sca.ServiceSpecificationQuery requestObject, String endPoint) {
        Object ret = new SCADelegate().callSCA("getServiceSpecification", requestObject, endPoint, callAsAdmin, props);
        return (com.smilecoms.commons.sca.ServiceSpecification)ret;
    }    
    public com.smilecoms.commons.sca.direct.am.Done reserveNumber_Direct(com.smilecoms.commons.sca.direct.am.NumberReservationData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("reserveNumber", requestObject, props);
        return (com.smilecoms.commons.sca.direct.am.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.am.Done reserveNumber_Direct(com.smilecoms.commons.sca.direct.am.NumberReservationData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("reserveNumber", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.am.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.am.Done freeIP_Direct(com.smilecoms.commons.sca.direct.am.FreeIPQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("freeIP", requestObject, props);
        return (com.smilecoms.commons.sca.direct.am.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.am.Done freeIP_Direct(com.smilecoms.commons.sca.direct.am.FreeIPQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("freeIP", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.am.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.am.NumberList getAvailableNumbers_Direct(com.smilecoms.commons.sca.direct.am.NumbersQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getAvailableNumbers", requestObject, props);
        return (com.smilecoms.commons.sca.direct.am.NumberList)ret;
    }             
        public com.smilecoms.commons.sca.direct.am.NumberList getAvailableNumbers_Direct(com.smilecoms.commons.sca.direct.am.NumbersQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getAvailableNumbers", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.am.NumberList)ret;
    }              
    public com.smilecoms.commons.sca.direct.am.PortOrdersList getPortOrders_Direct(com.smilecoms.commons.sca.direct.am.PortOrdersQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getPortOrders", requestObject, props);
        return (com.smilecoms.commons.sca.direct.am.PortOrdersList)ret;
    }             
        public com.smilecoms.commons.sca.direct.am.PortOrdersList getPortOrders_Direct(com.smilecoms.commons.sca.direct.am.PortOrdersQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getPortOrders", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.am.PortOrdersList)ret;
    }              
    public com.smilecoms.commons.sca.direct.am.Done addAvailableNumberRange_Direct(com.smilecoms.commons.sca.direct.am.AvailableNumberRange requestObject) {
        Object ret = new PlatformDelegate().callPlatform("addAvailableNumberRange", requestObject, props);
        return (com.smilecoms.commons.sca.direct.am.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.am.Done addAvailableNumberRange_Direct(com.smilecoms.commons.sca.direct.am.AvailableNumberRange requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("addAvailableNumberRange", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.am.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.am.Done freeNumber_Direct(com.smilecoms.commons.sca.direct.am.PlatformString requestObject) {
        Object ret = new PlatformDelegate().callPlatform("freeNumber", requestObject, props);
        return (com.smilecoms.commons.sca.direct.am.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.am.Done freeNumber_Direct(com.smilecoms.commons.sca.direct.am.PlatformString requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("freeNumber", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.am.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.am.Done issueNumber_Direct(com.smilecoms.commons.sca.direct.am.PlatformString requestObject) {
        Object ret = new PlatformDelegate().callPlatform("issueNumber", requestObject, props);
        return (com.smilecoms.commons.sca.direct.am.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.am.Done issueNumber_Direct(com.smilecoms.commons.sca.direct.am.PlatformString requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("issueNumber", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.am.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.am.Done issueIP_Direct(com.smilecoms.commons.sca.direct.am.IssueIPQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("issueIP", requestObject, props);
        return (com.smilecoms.commons.sca.direct.am.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.am.Done issueIP_Direct(com.smilecoms.commons.sca.direct.am.IssueIPQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("issueIP", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.am.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.am.IssuedIPsResult getIssuedIPs_Direct(com.smilecoms.commons.sca.direct.am.IssuedIPsQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getIssuedIPs", requestObject, props);
        return (com.smilecoms.commons.sca.direct.am.IssuedIPsResult)ret;
    }             
        public com.smilecoms.commons.sca.direct.am.IssuedIPsResult getIssuedIPs_Direct(com.smilecoms.commons.sca.direct.am.IssuedIPsQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getIssuedIPs", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.am.IssuedIPsResult)ret;
    }              
    public com.smilecoms.commons.sca.direct.am.PortInEvent handlePortInEvent_Direct(com.smilecoms.commons.sca.direct.am.PortInEvent requestObject) {
        Object ret = new PlatformDelegate().callPlatform("handlePortInEvent", requestObject, props);
        return (com.smilecoms.commons.sca.direct.am.PortInEvent)ret;
    }             
        public com.smilecoms.commons.sca.direct.am.PortInEvent handlePortInEvent_Direct(com.smilecoms.commons.sca.direct.am.PortInEvent requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("handlePortInEvent", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.am.PortInEvent)ret;
    }              
    public com.smilecoms.commons.sca.direct.am.NumberList getIssuedNumbers_Direct(com.smilecoms.commons.sca.direct.am.NumbersQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getIssuedNumbers", requestObject, props);
        return (com.smilecoms.commons.sca.direct.am.NumberList)ret;
    }             
        public com.smilecoms.commons.sca.direct.am.NumberList getIssuedNumbers_Direct(com.smilecoms.commons.sca.direct.am.NumbersQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getIssuedNumbers", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.am.NumberList)ret;
    }              
    public com.smilecoms.commons.sca.direct.am.AvailableIPs getAvailableIPs_Direct(com.smilecoms.commons.sca.direct.am.AvailableIPsQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getAvailableIPs", requestObject, props);
        return (com.smilecoms.commons.sca.direct.am.AvailableIPs)ret;
    }             
        public com.smilecoms.commons.sca.direct.am.AvailableIPs getAvailableIPs_Direct(com.smilecoms.commons.sca.direct.am.AvailableIPsQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getAvailableIPs", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.am.AvailableIPs)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done addServiceInstanceMappings_Direct(com.smilecoms.commons.sca.direct.bm.ServiceInstanceMappingList requestObject) {
        Object ret = new PlatformDelegate().callPlatform("addServiceInstanceMappings", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done addServiceInstanceMappings_Direct(com.smilecoms.commons.sca.direct.bm.ServiceInstanceMappingList requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("addServiceInstanceMappings", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done provisionUnitCredit_Direct(com.smilecoms.commons.sca.direct.bm.ProvisionUnitCreditRequest requestObject) {
        Object ret = new PlatformDelegate().callPlatform("provisionUnitCredit", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done provisionUnitCredit_Direct(com.smilecoms.commons.sca.direct.bm.ProvisionUnitCreditRequest requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("provisionUnitCredit", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done reverseTransactions_Direct(com.smilecoms.commons.sca.direct.bm.TransactionReversalData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("reverseTransactions", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done reverseTransactions_Direct(com.smilecoms.commons.sca.direct.bm.TransactionReversalData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("reverseTransactions", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done replaceServiceInstanceMappings_Direct(com.smilecoms.commons.sca.direct.bm.ServiceInstanceMappingsReplacementData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("replaceServiceInstanceMappings", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done replaceServiceInstanceMappings_Direct(com.smilecoms.commons.sca.direct.bm.ServiceInstanceMappingsReplacementData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("replaceServiceInstanceMappings", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.ServiceInstanceMappingList getServiceInstanceMappings_Direct(com.smilecoms.commons.sca.direct.bm.PlatformInteger requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getServiceInstanceMappings", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.ServiceInstanceMappingList)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.ServiceInstanceMappingList getServiceInstanceMappings_Direct(com.smilecoms.commons.sca.direct.bm.PlatformInteger requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getServiceInstanceMappings", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.ServiceInstanceMappingList)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Account createAccount_Direct(com.smilecoms.commons.sca.direct.bm.Account requestObject) {
        Object ret = new PlatformDelegate().callPlatform("createAccount", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Account)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Account createAccount_Direct(com.smilecoms.commons.sca.direct.bm.Account requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("createAccount", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Account)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done deleteServiceInstanceMappings_Direct(com.smilecoms.commons.sca.direct.bm.ServiceInstanceMappingList requestObject) {
        Object ret = new PlatformDelegate().callPlatform("deleteServiceInstanceMappings", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done deleteServiceInstanceMappings_Direct(com.smilecoms.commons.sca.direct.bm.ServiceInstanceMappingList requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("deleteServiceInstanceMappings", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done modifyServiceInstanceAccount_Direct(com.smilecoms.commons.sca.direct.bm.ServiceInstanceUpdateData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("modifyServiceInstanceAccount", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done modifyServiceInstanceAccount_Direct(com.smilecoms.commons.sca.direct.bm.ServiceInstanceUpdateData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("modifyServiceInstanceAccount", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done createScheduledAccountHistory_Direct(com.smilecoms.commons.sca.direct.bm.ScheduledAccountHistory requestObject) {
        Object ret = new PlatformDelegate().callPlatform("createScheduledAccountHistory", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done createScheduledAccountHistory_Direct(com.smilecoms.commons.sca.direct.bm.ScheduledAccountHistory requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("createScheduledAccountHistory", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.ChargingResult rateAndBill_Direct(com.smilecoms.commons.sca.direct.bm.ChargingRequest requestObject) {
        Object ret = new PlatformDelegate().callPlatform("rateAndBill", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.ChargingResult)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.ChargingResult rateAndBill_Direct(com.smilecoms.commons.sca.direct.bm.ChargingRequest requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("rateAndBill", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.ChargingResult)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.AccountSummary getAccountSummary_Direct(com.smilecoms.commons.sca.direct.bm.AccountSummaryQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getAccountSummary", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.AccountSummary)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.AccountSummary getAccountSummary_Direct(com.smilecoms.commons.sca.direct.bm.AccountSummaryQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getAccountSummary", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.AccountSummary)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done deleteAccount_Direct(com.smilecoms.commons.sca.direct.bm.PlatformLong requestObject) {
        Object ret = new PlatformDelegate().callPlatform("deleteAccount", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done deleteAccount_Direct(com.smilecoms.commons.sca.direct.bm.PlatformLong requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("deleteAccount", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.AccountList getAccounts_Direct(com.smilecoms.commons.sca.direct.bm.AccountQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getAccounts", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.AccountList)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.AccountList getAccounts_Direct(com.smilecoms.commons.sca.direct.bm.AccountQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getAccounts", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.AccountList)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.UnitCreditInstanceList getUnitCreditInstances_Direct(com.smilecoms.commons.sca.direct.bm.UnitCreditInstanceQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getUnitCreditInstances", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.UnitCreditInstanceList)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.UnitCreditInstanceList getUnitCreditInstances_Direct(com.smilecoms.commons.sca.direct.bm.UnitCreditInstanceQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getUnitCreditInstances", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.UnitCreditInstanceList)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.AccountHistory getAccountHistory_Direct(com.smilecoms.commons.sca.direct.bm.AccountHistoryQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getAccountHistory", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.AccountHistory)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.AccountHistory getAccountHistory_Direct(com.smilecoms.commons.sca.direct.bm.AccountHistoryQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getAccountHistory", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.AccountHistory)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done modifyAccount_Direct(com.smilecoms.commons.sca.direct.bm.Account requestObject) {
        Object ret = new PlatformDelegate().callPlatform("modifyAccount", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done modifyAccount_Direct(com.smilecoms.commons.sca.direct.bm.Account requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("modifyAccount", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done modifyUnitCredit_Direct(com.smilecoms.commons.sca.direct.bm.UnitCreditInstance requestObject) {
        Object ret = new PlatformDelegate().callPlatform("modifyUnitCredit", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done modifyUnitCredit_Direct(com.smilecoms.commons.sca.direct.bm.UnitCreditInstance requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("modifyUnitCredit", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done transferBalance_Direct(com.smilecoms.commons.sca.direct.bm.BalanceTransferData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("transferBalance", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done transferBalance_Direct(com.smilecoms.commons.sca.direct.bm.BalanceTransferData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("transferBalance", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.RatePlan getRatePlan_Direct(com.smilecoms.commons.sca.direct.bm.PlatformInteger requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getRatePlan", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.RatePlan)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.RatePlan getRatePlan_Direct(com.smilecoms.commons.sca.direct.bm.PlatformInteger requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getRatePlan", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.RatePlan)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done updatePortingData_Direct(com.smilecoms.commons.sca.direct.bm.PortingData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("updatePortingData", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done updatePortingData_Direct(com.smilecoms.commons.sca.direct.bm.PortingData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("updatePortingData", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.TransferGraph getTransferGraph_Direct(com.smilecoms.commons.sca.direct.bm.TransferGraphQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getTransferGraph", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.TransferGraph)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.TransferGraph getTransferGraph_Direct(com.smilecoms.commons.sca.direct.bm.TransferGraphQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getTransferGraph", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.TransferGraph)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.MaximumExpiryDateOfUnitCreditOnAccountReply getMaximumExpiryDateOfUnitCreditOnAccount_Direct(com.smilecoms.commons.sca.direct.bm.MaximumExpiryDateOfUnitCreditOnAccountQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getMaximumExpiryDateOfUnitCreditOnAccount", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.MaximumExpiryDateOfUnitCreditOnAccountReply)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.MaximumExpiryDateOfUnitCreditOnAccountReply getMaximumExpiryDateOfUnitCreditOnAccount_Direct(com.smilecoms.commons.sca.direct.bm.MaximumExpiryDateOfUnitCreditOnAccountQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getMaximumExpiryDateOfUnitCreditOnAccount", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.MaximumExpiryDateOfUnitCreditOnAccountReply)ret;
    }              
    public com.smilecoms.commons.sca.direct.bm.Done splitUnitCredit_Direct(com.smilecoms.commons.sca.direct.bm.SplitUnitCreditData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("splitUnitCredit", requestObject, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.bm.Done splitUnitCredit_Direct(com.smilecoms.commons.sca.direct.bm.SplitUnitCreditData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("splitUnitCredit", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.bm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.et.Done createEventSubscription_Direct(com.smilecoms.commons.sca.direct.et.EventSubscription requestObject) {
        Object ret = new PlatformDelegate().callPlatform("createEventSubscription", requestObject, props);
        return (com.smilecoms.commons.sca.direct.et.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.et.Done createEventSubscription_Direct(com.smilecoms.commons.sca.direct.et.EventSubscription requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("createEventSubscription", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.et.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.et.Done createEvent_Direct(com.smilecoms.commons.sca.direct.et.Event requestObject) {
        Object ret = new PlatformDelegate().callPlatform("createEvent", requestObject, props);
        return (com.smilecoms.commons.sca.direct.et.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.et.Done createEvent_Direct(com.smilecoms.commons.sca.direct.et.Event requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("createEvent", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.et.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.et.EventList getEvents_Direct(com.smilecoms.commons.sca.direct.et.EventQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getEvents", requestObject, props);
        return (com.smilecoms.commons.sca.direct.et.EventList)ret;
    }             
        public com.smilecoms.commons.sca.direct.et.EventList getEvents_Direct(com.smilecoms.commons.sca.direct.et.EventQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getEvents", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.et.EventList)ret;
    }              
    public com.smilecoms.commons.sca.direct.et.Done deleteFutureEvent_Direct(com.smilecoms.commons.sca.direct.et.PlatformLong requestObject) {
        Object ret = new PlatformDelegate().callPlatform("deleteFutureEvent", requestObject, props);
        return (com.smilecoms.commons.sca.direct.et.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.et.Done deleteFutureEvent_Direct(com.smilecoms.commons.sca.direct.et.PlatformLong requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("deleteFutureEvent", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.et.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.hwf.Done setTaskVariables_Direct(com.smilecoms.commons.sca.direct.hwf.VariableAssignmentData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("setTaskVariables", requestObject, props);
        return (com.smilecoms.commons.sca.direct.hwf.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.hwf.Done setTaskVariables_Direct(com.smilecoms.commons.sca.direct.hwf.VariableAssignmentData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("setTaskVariables", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.hwf.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.hwf.Done deleteProcessDefinition_Direct(com.smilecoms.commons.sca.direct.hwf.PlatformString requestObject) {
        Object ret = new PlatformDelegate().callPlatform("deleteProcessDefinition", requestObject, props);
        return (com.smilecoms.commons.sca.direct.hwf.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.hwf.Done deleteProcessDefinition_Direct(com.smilecoms.commons.sca.direct.hwf.PlatformString requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("deleteProcessDefinition", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.hwf.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.hwf.ProcessDefinitionList getProcessDefinitions_Direct(com.smilecoms.commons.sca.direct.hwf.PlatformString requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getProcessDefinitions", requestObject, props);
        return (com.smilecoms.commons.sca.direct.hwf.ProcessDefinitionList)ret;
    }             
        public com.smilecoms.commons.sca.direct.hwf.ProcessDefinitionList getProcessDefinitions_Direct(com.smilecoms.commons.sca.direct.hwf.PlatformString requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getProcessDefinitions", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.hwf.ProcessDefinitionList)ret;
    }              
    public com.smilecoms.commons.sca.direct.hwf.Done startProcess_Direct(com.smilecoms.commons.sca.direct.hwf.PlatformString requestObject) {
        Object ret = new PlatformDelegate().callPlatform("startProcess", requestObject, props);
        return (com.smilecoms.commons.sca.direct.hwf.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.hwf.Done startProcess_Direct(com.smilecoms.commons.sca.direct.hwf.PlatformString requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("startProcess", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.hwf.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.hwf.Done setProcessVariables_Direct(com.smilecoms.commons.sca.direct.hwf.VariableAssignmentData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("setProcessVariables", requestObject, props);
        return (com.smilecoms.commons.sca.direct.hwf.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.hwf.Done setProcessVariables_Direct(com.smilecoms.commons.sca.direct.hwf.VariableAssignmentData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("setProcessVariables", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.hwf.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.hwf.ProcessHistory getProcessHistory_Direct(com.smilecoms.commons.sca.direct.hwf.ProcessHistoryQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getProcessHistory", requestObject, props);
        return (com.smilecoms.commons.sca.direct.hwf.ProcessHistory)ret;
    }             
        public com.smilecoms.commons.sca.direct.hwf.ProcessHistory getProcessHistory_Direct(com.smilecoms.commons.sca.direct.hwf.ProcessHistoryQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getProcessHistory", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.hwf.ProcessHistory)ret;
    }              
    public com.smilecoms.commons.sca.direct.hwf.TaskList getTaskList_Direct(com.smilecoms.commons.sca.direct.hwf.TaskQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getTaskList", requestObject, props);
        return (com.smilecoms.commons.sca.direct.hwf.TaskList)ret;
    }             
        public com.smilecoms.commons.sca.direct.hwf.TaskList getTaskList_Direct(com.smilecoms.commons.sca.direct.hwf.TaskQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getTaskList", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.hwf.TaskList)ret;
    }              
    public com.smilecoms.commons.sca.direct.hwf.Done updateTask_Direct(com.smilecoms.commons.sca.direct.hwf.TaskUpdateData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("updateTask", requestObject, props);
        return (com.smilecoms.commons.sca.direct.hwf.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.hwf.Done updateTask_Direct(com.smilecoms.commons.sca.direct.hwf.TaskUpdateData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("updateTask", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.hwf.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.UICCDetails getUICCDetails_Direct(com.smilecoms.commons.sca.direct.im.UICCDetailsQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getUICCDetails", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.UICCDetails)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.UICCDetails getUICCDetails_Direct(com.smilecoms.commons.sca.direct.im.UICCDetailsQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getUICCDetails", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.UICCDetails)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.PlatformInteger addCustomer_Direct(com.smilecoms.commons.sca.direct.im.Customer requestObject) {
        Object ret = new PlatformDelegate().callPlatform("addCustomer", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.PlatformInteger)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.PlatformInteger addCustomer_Direct(com.smilecoms.commons.sca.direct.im.Customer requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("addCustomer", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.PlatformInteger)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done performSIMSwap_Direct(com.smilecoms.commons.sca.direct.im.SIMSwapRequest requestObject) {
        Object ret = new PlatformDelegate().callPlatform("performSIMSwap", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done performSIMSwap_Direct(com.smilecoms.commons.sca.direct.im.SIMSwapRequest requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("performSIMSwap", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.IMSSubscription getIMSSubscription_Direct(com.smilecoms.commons.sca.direct.im.IMSSubscriptionQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getIMSSubscription", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.IMSSubscription)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.IMSSubscription getIMSSubscription_Direct(com.smilecoms.commons.sca.direct.im.IMSSubscriptionQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getIMSSubscription", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.IMSSubscription)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.NidaVerifyReply verifyCustomerWithNIDA_Direct(com.smilecoms.commons.sca.direct.im.NidaVerifyQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("verifyCustomerWithNIDA", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.NidaVerifyReply)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.NidaVerifyReply verifyCustomerWithNIDA_Direct(com.smilecoms.commons.sca.direct.im.NidaVerifyQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("verifyCustomerWithNIDA", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.NidaVerifyReply)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.IMSPublicIdentity getIMSPublicIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPublicIdentityQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getIMSPublicIdentity", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.IMSPublicIdentity)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.IMSPublicIdentity getIMSPublicIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPublicIdentityQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getIMSPublicIdentity", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.IMSPublicIdentity)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done resetSSOPassword_Direct(com.smilecoms.commons.sca.direct.im.SSOPasswordResetData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("resetSSOPassword", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done resetSSOPassword_Direct(com.smilecoms.commons.sca.direct.im.SSOPasswordResetData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("resetSSOPassword", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Photograph getPhoto_Direct(com.smilecoms.commons.sca.direct.im.PlatformString requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getPhoto", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Photograph)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Photograph getPhoto_Direct(com.smilecoms.commons.sca.direct.im.PlatformString requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getPhoto", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Photograph)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.IMSSimpleIdentityAssociation createIdentityAssociation_Direct(com.smilecoms.commons.sca.direct.im.IMSSimpleIdentityAssociation requestObject) {
        Object ret = new PlatformDelegate().callPlatform("createIdentityAssociation", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.IMSSimpleIdentityAssociation)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.IMSSimpleIdentityAssociation createIdentityAssociation_Direct(com.smilecoms.commons.sca.direct.im.IMSSimpleIdentityAssociation requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("createIdentityAssociation", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.IMSSimpleIdentityAssociation)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.IMSPublicIdentity createIMSPublicIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPublicIdentity requestObject) {
        Object ret = new PlatformDelegate().callPlatform("createIMSPublicIdentity", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.IMSPublicIdentity)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.IMSPublicIdentity createIMSPublicIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPublicIdentity requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("createIMSPublicIdentity", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.IMSPublicIdentity)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.NiraPasswordChangeReply changeNiraPassword_Direct(com.smilecoms.commons.sca.direct.im.NiraPasswordChange requestObject) {
        Object ret = new PlatformDelegate().callPlatform("changeNiraPassword", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.NiraPasswordChangeReply)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.NiraPasswordChangeReply changeNiraPassword_Direct(com.smilecoms.commons.sca.direct.im.NiraPasswordChange requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("changeNiraPassword", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.NiraPasswordChangeReply)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done addAddress_Direct(com.smilecoms.commons.sca.direct.im.Address requestObject) {
        Object ret = new PlatformDelegate().callPlatform("addAddress", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done addAddress_Direct(com.smilecoms.commons.sca.direct.im.Address requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("addAddress", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity modifyIMSPrivateIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity requestObject) {
        Object ret = new PlatformDelegate().callPlatform("modifyIMSPrivateIdentity", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity modifyIMSPrivateIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("modifyIMSPrivateIdentity", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.AuthenticationResult authenticate_Direct(com.smilecoms.commons.sca.direct.im.AuthenticationQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("authenticate", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.AuthenticationResult)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.AuthenticationResult authenticate_Direct(com.smilecoms.commons.sca.direct.im.AuthenticationQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("authenticate", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.AuthenticationResult)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done modifyCustomer_Direct(com.smilecoms.commons.sca.direct.im.Customer requestObject) {
        Object ret = new PlatformDelegate().callPlatform("modifyCustomer", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done modifyCustomer_Direct(com.smilecoms.commons.sca.direct.im.Customer requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("modifyCustomer", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.IMSSubscription createIMSSubscription_Direct(com.smilecoms.commons.sca.direct.im.IMSSubscription requestObject) {
        Object ret = new PlatformDelegate().callPlatform("createIMSSubscription", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.IMSSubscription)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.IMSSubscription createIMSSubscription_Direct(com.smilecoms.commons.sca.direct.im.IMSSubscription requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("createIMSSubscription", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.IMSSubscription)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.SSOPasswordResetLink sendSSOPasswordResetLink_Direct(com.smilecoms.commons.sca.direct.im.SSOPasswordResetLinkData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("sendSSOPasswordResetLink", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.SSOPasswordResetLink)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.SSOPasswordResetLink sendSSOPasswordResetLink_Direct(com.smilecoms.commons.sca.direct.im.SSOPasswordResetLinkData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("sendSSOPasswordResetLink", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.SSOPasswordResetLink)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.NiraVerifyReply verifyCustomerWithNIRA_Direct(com.smilecoms.commons.sca.direct.im.NiraVerifyQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("verifyCustomerWithNIRA", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.NiraVerifyReply)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.NiraVerifyReply verifyCustomerWithNIRA_Direct(com.smilecoms.commons.sca.direct.im.NiraVerifyQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("verifyCustomerWithNIRA", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.NiraVerifyReply)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.NAIIdentity getNAIIdentity_Direct(com.smilecoms.commons.sca.direct.im.NAIIdentityQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getNAIIdentity", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.NAIIdentity)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.NAIIdentity getNAIIdentity_Direct(com.smilecoms.commons.sca.direct.im.NAIIdentityQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getNAIIdentity", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.NAIIdentity)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done deleteIMSSubscription_Direct(com.smilecoms.commons.sca.direct.im.IMSSubscription requestObject) {
        Object ret = new PlatformDelegate().callPlatform("deleteIMSSubscription", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done deleteIMSSubscription_Direct(com.smilecoms.commons.sca.direct.im.IMSSubscription requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("deleteIMSSubscription", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done deleteIMSPrivateIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity requestObject) {
        Object ret = new PlatformDelegate().callPlatform("deleteIMSPrivateIdentity", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done deleteIMSPrivateIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("deleteIMSPrivateIdentity", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done modifyAddress_Direct(com.smilecoms.commons.sca.direct.im.Address requestObject) {
        Object ret = new PlatformDelegate().callPlatform("modifyAddress", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done modifyAddress_Direct(com.smilecoms.commons.sca.direct.im.Address requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("modifyAddress", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.TenantData getCustomerTenant_Direct(com.smilecoms.commons.sca.direct.im.TenantQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getCustomerTenant", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.TenantData)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.TenantData getCustomerTenant_Direct(com.smilecoms.commons.sca.direct.im.TenantQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getCustomerTenant", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.TenantData)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.VerifyNinResponseList verifyNinCustomer_Direct(com.smilecoms.commons.sca.direct.im.VerifyNinQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("verifyNinCustomer", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.VerifyNinResponseList)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.VerifyNinResponseList verifyNinCustomer_Direct(com.smilecoms.commons.sca.direct.im.VerifyNinQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("verifyNinCustomer", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.VerifyNinResponseList)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.ProductsKycVerificationResponseList kycVerifySale_Direct(com.smilecoms.commons.sca.direct.im.ProductsKycVerificationQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("kycVerifySale", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.ProductsKycVerificationResponseList)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.ProductsKycVerificationResponseList kycVerifySale_Direct(com.smilecoms.commons.sca.direct.im.ProductsKycVerificationQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("kycVerifySale", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.ProductsKycVerificationResponseList)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.PlatformInteger addOrganisation_Direct(com.smilecoms.commons.sca.direct.im.Organisation requestObject) {
        Object ret = new PlatformDelegate().callPlatform("addOrganisation", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.PlatformInteger)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.PlatformInteger addOrganisation_Direct(com.smilecoms.commons.sca.direct.im.Organisation requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("addOrganisation", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.PlatformInteger)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.IMSPublicIdentity modifyIMSPublicIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPublicIdentity requestObject) {
        Object ret = new PlatformDelegate().callPlatform("modifyIMSPublicIdentity", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.IMSPublicIdentity)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.IMSPublicIdentity modifyIMSPublicIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPublicIdentity requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("modifyIMSPublicIdentity", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.IMSPublicIdentity)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.ThirdPartyAuthorisationRuleSetList getThirdPartyAuthorisationRules_Direct(com.smilecoms.commons.sca.direct.im.PlatformInteger requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getThirdPartyAuthorisationRules", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.ThirdPartyAuthorisationRuleSetList)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.ThirdPartyAuthorisationRuleSetList getThirdPartyAuthorisationRules_Direct(com.smilecoms.commons.sca.direct.im.PlatformInteger requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getThirdPartyAuthorisationRules", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.ThirdPartyAuthorisationRuleSetList)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done deleteNAIIdentity_Direct(com.smilecoms.commons.sca.direct.im.NAIIdentity requestObject) {
        Object ret = new PlatformDelegate().callPlatform("deleteNAIIdentity", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done deleteNAIIdentity_Direct(com.smilecoms.commons.sca.direct.im.NAIIdentity requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("deleteNAIIdentity", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done deleteIMSPublicIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPublicIdentity requestObject) {
        Object ret = new PlatformDelegate().callPlatform("deleteIMSPublicIdentity", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done deleteIMSPublicIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPublicIdentity requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("deleteIMSPublicIdentity", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done deleteIdentityAssociation_Direct(com.smilecoms.commons.sca.direct.im.IMSSimpleIdentityAssociation requestObject) {
        Object ret = new PlatformDelegate().callPlatform("deleteIdentityAssociation", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done deleteIdentityAssociation_Direct(com.smilecoms.commons.sca.direct.im.IMSSimpleIdentityAssociation requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("deleteIdentityAssociation", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.NAIIdentity createNAIIdentity_Direct(com.smilecoms.commons.sca.direct.im.NAIIdentity requestObject) {
        Object ret = new PlatformDelegate().callPlatform("createNAIIdentity", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.NAIIdentity)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.NAIIdentity createNAIIdentity_Direct(com.smilecoms.commons.sca.direct.im.NAIIdentity requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("createNAIIdentity", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.NAIIdentity)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity createIMSPrivateIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity requestObject) {
        Object ret = new PlatformDelegate().callPlatform("createIMSPrivateIdentity", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity createIMSPrivateIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("createIMSPrivateIdentity", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done deleteAddress_Direct(com.smilecoms.commons.sca.direct.im.Address requestObject) {
        Object ret = new PlatformDelegate().callPlatform("deleteAddress", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done deleteAddress_Direct(com.smilecoms.commons.sca.direct.im.Address requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("deleteAddress", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.VerifyDefacedReply verifyDefacedCustomer_Direct(com.smilecoms.commons.sca.direct.im.VerifyDefacedQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("verifyDefacedCustomer", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.VerifyDefacedReply)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.VerifyDefacedReply verifyDefacedCustomer_Direct(com.smilecoms.commons.sca.direct.im.VerifyDefacedQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("verifyDefacedCustomer", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.VerifyDefacedReply)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.VerifyForeignerReply verifyForeignerCustomer_Direct(com.smilecoms.commons.sca.direct.im.VerifyForeignerQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("verifyForeignerCustomer", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.VerifyForeignerReply)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.VerifyForeignerReply verifyForeignerCustomer_Direct(com.smilecoms.commons.sca.direct.im.VerifyForeignerQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("verifyForeignerCustomer", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.VerifyForeignerReply)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity getIMSPrivateIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPrivateIdentityQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getIMSPrivateIdentity", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity getIMSPrivateIdentity_Direct(com.smilecoms.commons.sca.direct.im.IMSPrivateIdentityQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getIMSPrivateIdentity", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.IMSPrivateIdentity)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.NAIIdentity modifyNAIIdentity_Direct(com.smilecoms.commons.sca.direct.im.NAIIdentity requestObject) {
        Object ret = new PlatformDelegate().callPlatform("modifyNAIIdentity", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.NAIIdentity)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.NAIIdentity modifyNAIIdentity_Direct(com.smilecoms.commons.sca.direct.im.NAIIdentity requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("modifyNAIIdentity", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.NAIIdentity)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.ServiceActivationData getServiceActivationData_Direct(com.smilecoms.commons.sca.direct.im.IMSSubscriptionQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getServiceActivationData", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.ServiceActivationData)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.ServiceActivationData getServiceActivationData_Direct(com.smilecoms.commons.sca.direct.im.IMSSubscriptionQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getServiceActivationData", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.ServiceActivationData)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.OrganisationList getOrganisations_Direct(com.smilecoms.commons.sca.direct.im.OrganisationQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getOrganisations", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.OrganisationList)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.OrganisationList getOrganisations_Direct(com.smilecoms.commons.sca.direct.im.OrganisationQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getOrganisations", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.OrganisationList)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done modifyIMSSubscriptionStatus_Direct(com.smilecoms.commons.sca.direct.im.IMSSubscriptionStatusUpdateData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("modifyIMSSubscriptionStatus", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done modifyIMSSubscriptionStatus_Direct(com.smilecoms.commons.sca.direct.im.IMSSubscriptionStatusUpdateData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("modifyIMSSubscriptionStatus", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.DocumentUniquenessReply checkDocumentUniqueness_Direct(com.smilecoms.commons.sca.direct.im.DocumentUniquenessQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("checkDocumentUniqueness", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.DocumentUniquenessReply)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.DocumentUniquenessReply checkDocumentUniqueness_Direct(com.smilecoms.commons.sca.direct.im.DocumentUniquenessQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("checkDocumentUniqueness", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.DocumentUniquenessReply)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.CustomerList getCustomers_Direct(com.smilecoms.commons.sca.direct.im.CustomerQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getCustomers", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.CustomerList)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.CustomerList getCustomers_Direct(com.smilecoms.commons.sca.direct.im.CustomerQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getCustomers", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.CustomerList)ret;
    }              
    public com.smilecoms.commons.sca.direct.im.Done modifyOrganisation_Direct(com.smilecoms.commons.sca.direct.im.Organisation requestObject) {
        Object ret = new PlatformDelegate().callPlatform("modifyOrganisation", requestObject, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.im.Done modifyOrganisation_Direct(com.smilecoms.commons.sca.direct.im.Organisation requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("modifyOrganisation", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.im.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.mm.Done submitToEngine_Direct(com.smilecoms.commons.sca.direct.mm.EngineMessage requestObject) {
        Object ret = new PlatformDelegate().callPlatform("submitToEngine", requestObject, props);
        return (com.smilecoms.commons.sca.direct.mm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.mm.Done submitToEngine_Direct(com.smilecoms.commons.sca.direct.mm.EngineMessage requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("submitToEngine", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.mm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.mm.Done sendShortMessage_Direct(com.smilecoms.commons.sca.direct.mm.ShortMessage requestObject) {
        Object ret = new PlatformDelegate().callPlatform("sendShortMessage", requestObject, props);
        return (com.smilecoms.commons.sca.direct.mm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.mm.Done sendShortMessage_Direct(com.smilecoms.commons.sca.direct.mm.ShortMessage requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("sendShortMessage", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.mm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.mm.Done resendMessage_Direct(com.smilecoms.commons.sca.direct.mm.MessageId requestObject) {
        Object ret = new PlatformDelegate().callPlatform("resendMessage", requestObject, props);
        return (com.smilecoms.commons.sca.direct.mm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.mm.Done resendMessage_Direct(com.smilecoms.commons.sca.direct.mm.MessageId requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("resendMessage", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.mm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.mm.Done submitToCampaignEngine_Direct(com.smilecoms.commons.sca.direct.mm.CampaignEngineRequest requestObject) {
        Object ret = new PlatformDelegate().callPlatform("submitToCampaignEngine", requestObject, props);
        return (com.smilecoms.commons.sca.direct.mm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.mm.Done submitToCampaignEngine_Direct(com.smilecoms.commons.sca.direct.mm.CampaignEngineRequest requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("submitToCampaignEngine", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.mm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.mm.Done sendEmail_Direct(com.smilecoms.commons.sca.direct.mm.Email requestObject) {
        Object ret = new PlatformDelegate().callPlatform("sendEmail", requestObject, props);
        return (com.smilecoms.commons.sca.direct.mm.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.mm.Done sendEmail_Direct(com.smilecoms.commons.sca.direct.mm.Email requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("sendEmail", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.mm.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.pvs.PrepaidStrip updatePrepaidStrip_Direct(com.smilecoms.commons.sca.direct.pvs.PrepaidStrip requestObject) {
        Object ret = new PlatformDelegate().callPlatform("updatePrepaidStrip", requestObject, props);
        return (com.smilecoms.commons.sca.direct.pvs.PrepaidStrip)ret;
    }             
        public com.smilecoms.commons.sca.direct.pvs.PrepaidStrip updatePrepaidStrip_Direct(com.smilecoms.commons.sca.direct.pvs.PrepaidStrip requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("updatePrepaidStrip", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.pvs.PrepaidStrip)ret;
    }              
    public com.smilecoms.commons.sca.direct.pvs.PrepaidStrip redeemPrepaidStrip_Direct(com.smilecoms.commons.sca.direct.pvs.PrepaidStripRedemptionData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("redeemPrepaidStrip", requestObject, props);
        return (com.smilecoms.commons.sca.direct.pvs.PrepaidStrip)ret;
    }             
        public com.smilecoms.commons.sca.direct.pvs.PrepaidStrip redeemPrepaidStrip_Direct(com.smilecoms.commons.sca.direct.pvs.PrepaidStripRedemptionData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("redeemPrepaidStrip", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.pvs.PrepaidStrip)ret;
    }              
    public com.smilecoms.commons.sca.direct.pvs.PrepaidStrip getPrepaidStrip_Direct(com.smilecoms.commons.sca.direct.pvs.PrepaidStripQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getPrepaidStrip", requestObject, props);
        return (com.smilecoms.commons.sca.direct.pvs.PrepaidStrip)ret;
    }             
        public com.smilecoms.commons.sca.direct.pvs.PrepaidStrip getPrepaidStrip_Direct(com.smilecoms.commons.sca.direct.pvs.PrepaidStripQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getPrepaidStrip", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.pvs.PrepaidStrip)ret;
    }              
    public com.smilecoms.commons.sca.direct.pvs.PrepaidStrips getPrepaidStrips_Direct(com.smilecoms.commons.sca.direct.pvs.PrepaidStripsQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getPrepaidStrips", requestObject, props);
        return (com.smilecoms.commons.sca.direct.pvs.PrepaidStrips)ret;
    }             
        public com.smilecoms.commons.sca.direct.pvs.PrepaidStrips getPrepaidStrips_Direct(com.smilecoms.commons.sca.direct.pvs.PrepaidStripsQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getPrepaidStrips", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.pvs.PrepaidStrips)ret;
    }              
    public com.smilecoms.commons.sca.direct.pvs.Done resetVoucherLockForAccount_Direct(com.smilecoms.commons.sca.direct.pvs.ResetAccountVoucherLock requestObject) {
        Object ret = new PlatformDelegate().callPlatform("resetVoucherLockForAccount", requestObject, props);
        return (com.smilecoms.commons.sca.direct.pvs.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.pvs.Done resetVoucherLockForAccount_Direct(com.smilecoms.commons.sca.direct.pvs.ResetAccountVoucherLock requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("resetVoucherLockForAccount", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.pvs.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.pvs.Done batchUpdatePrepaidStrips_Direct(com.smilecoms.commons.sca.direct.pvs.PrepaidStripBatchData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("batchUpdatePrepaidStrips", requestObject, props);
        return (com.smilecoms.commons.sca.direct.pvs.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.pvs.Done batchUpdatePrepaidStrips_Direct(com.smilecoms.commons.sca.direct.pvs.PrepaidStripBatchData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("batchUpdatePrepaidStrips", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.pvs.Done)ret;
    }              
    public com.smilecoms.commons.sca.direct.pvs.PlatformInteger getPrepaidStripCount_Direct(com.smilecoms.commons.sca.direct.pvs.PrepaidStripCountQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getPrepaidStripCount", requestObject, props);
        return (com.smilecoms.commons.sca.direct.pvs.PlatformInteger)ret;
    }             
        public com.smilecoms.commons.sca.direct.pvs.PlatformInteger getPrepaidStripCount_Direct(com.smilecoms.commons.sca.direct.pvs.PrepaidStripCountQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getPrepaidStripCount", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.pvs.PlatformInteger)ret;
    }              
    public com.smilecoms.commons.sca.direct.pvs.PrepaidStrips createPrepaidStrips_Direct(com.smilecoms.commons.sca.direct.pvs.NewPrepaidStripsData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("createPrepaidStrips", requestObject, props);
        return (com.smilecoms.commons.sca.direct.pvs.PrepaidStrips)ret;
    }             
        public com.smilecoms.commons.sca.direct.pvs.PrepaidStrips createPrepaidStrips_Direct(com.smilecoms.commons.sca.direct.pvs.NewPrepaidStripsData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("createPrepaidStrips", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.pvs.PrepaidStrips)ret;
    }              
    public com.smilecoms.commons.sca.direct.pvs.VoucherLockForAccount getVoucherLockForAccount_Direct(com.smilecoms.commons.sca.direct.pvs.VoucherLockForAccountQuery requestObject) {
        Object ret = new PlatformDelegate().callPlatform("getVoucherLockForAccount", requestObject, props);
        return (com.smilecoms.commons.sca.direct.pvs.VoucherLockForAccount)ret;
    }             
        public com.smilecoms.commons.sca.direct.pvs.VoucherLockForAccount getVoucherLockForAccount_Direct(com.smilecoms.commons.sca.direct.pvs.VoucherLockForAccountQuery requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("getVoucherLockForAccount", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.pvs.VoucherLockForAccount)ret;
    }              
    public com.smilecoms.commons.sca.direct.pvs.Done sendPrepaidStripsForInvoice_Direct(com.smilecoms.commons.sca.direct.pvs.SendPrepaidStripsData requestObject) {
        Object ret = new PlatformDelegate().callPlatform("sendPrepaidStripsForInvoice", requestObject, props);
        return (com.smilecoms.commons.sca.direct.pvs.Done)ret;
    }             
        public com.smilecoms.commons.sca.direct.pvs.Done sendPrepaidStripsForInvoice_Direct(com.smilecoms.commons.sca.direct.pvs.SendPrepaidStripsData requestObject, String endPoint) {
        Object ret = new PlatformDelegate().callPlatform("sendPrepaidStripsForInvoice", requestObject, endPoint, props);
        return (com.smilecoms.commons.sca.direct.pvs.Done)ret;
    }              
    
} 
 
    